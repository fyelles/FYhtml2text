

Linux
          manual pages
Section 2
 

 
 

Name
sgetmask, ssetmask — manipulation of signal mask
      (obsolete)

Synopsis

long
            sgetmask(
void);
 

           
        

long
            ssetmask(
long newmask);

           
        

 
DESCRIPTION
These system calls are obsolete. Do not use them; use sigprocmask(2) instead.
sgetmask() returns the
      signal mask of the calling process.
ssetmask() sets the signal
      mask of the calling process to the value given in newmask. The previous signal
      mask is returned.
The signal masks dealt with by these two system calls are
      plain bit masks (unlike the sigset_t used by sigprocmask(2)); use
      sigmask(3) to create and
      inspect these masks.

 
RETURN VALUE
sgetmask() always
      successfully returns the signal mask. ssetmask() always succeeds, and returns the
      previous signal mask.

 
ERRORS
These system calls always succeed.

 
CONFORMING TO
These system calls are Linux-specific.

 
NOTES
Glibc does not provide wrappers for these system calls;
      use syscall(2).
These system calls are unaware of signal numbers greater
      than 31 (i.e., real-time signals).
It is not possible to block SIGSTOP or SIGKILL.

 
SEE ALSO
sigprocmask(2), signal(7)

 
COLOPHON
This page is part of release 3.33 of the Linux man-pages project. A
      description of the project, and information about reporting
      bugs, can be found at http://man7.org/linux/man-pages/.

                    t
                  Copyright (c) 2007 by Michael Kerrisk <mtk.manpagesdocument.write('@');(@)gmail.com>

                  Permission is granted to make and distribute verbatim copies of this

                  manual provided the copyright notice and this permission notice are

                  preserved on all copies.

                  Permission is granted to copy and distribute modified versions of this

                  manual under the conditions for verbatim copying, provided that the

                  entire resulting derived work is distributed under the terms of a

                  permission notice identical to this one.

                  Since the Linux kernel and libraries are constantly changing, this

                  manual page may be incorrect or out-of-date.  The author(s) assume no

                  responsibility for errors or omissions, or for damages resulting from

                  the use of the information contained herein.  The author(s) may not

                  have taken the same level of care in the production of this manual,

                  which is licensed free of charge, as they might when working

                  professionally.

                  Formatted or processed versions of this manual, if unaccompanied by

                  the source, must acknowledge the copyright and authors of this work.

