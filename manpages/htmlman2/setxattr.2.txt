

Linux
          manual pages
Section 2
 

 
 

Name
setxattr, lsetxattr, fsetxattr — set an extended
      attribute value

Synopsis

#include <sys/types.h>
#include <attr/xattr.h>

int
            setxattr(
const char *path,

 
const char *name,

 
const void *value,

 
size_t size,

 
int flags);

           
        

int
            lsetxattr(
const char *path,

 
const char *name,

 
const void *value,

 
size_t size,

 
int flags);

           
        

int
            fsetxattr(
int fd,

 
const char *name,

 
const void *value,

 
size_t size,

 
int flags);

           
        

 
DESCRIPTION
Extended attributes are name:value pairs associated with
      inodes (files, directories, symbolic links, etc.). They are
      extensions to the normal attributes which are associated with
      all inodes in the system (i.e., the stat(2) data). A complete
      overview of extended attributes concepts can be found in
      attr(5).
setxattr() sets the
      value of the extended
      attribute identified by name and associated with the
      given path in the
      file system. The size
      of the value must be
      specified.
lsetxattr() is identical to
      setxattr(), except in the case
      of a symbolic link, where the extended attribute is set on
      the link itself, not the file that it refers to.
fsetxattr() is identical to
      setxattr(), only the extended
      attribute is set on the open file referred to by fd (as returned by open(2)) in place of
      path.
An extended attribute name is a simple null-terminated
      string. The name
      includes a namespace prefix; there may be several, disjoint
      namespaces associated with an individual inode. The
      value of an extended
      attribute is a chunk of arbitrary textual or binary data of
      specified length.
The flags argument
      can be used to refine the semantics of the operation.
      XATTR_CREATE specifies a pure
      create, which fails if the named attribute exists already.
      XATTR_REPLACE specifies a pure
      replace operation, which fails if the named attribute does
      not already exist. By default (no flags), the extended
      attribute will be created if need be, or will simply replace
      the value if the attribute exists.

 
RETURN VALUE
On success, zero is returned. On failure, −1 is
      returned and errno is set
      appropriately.
If XATTR_CREATE is
      specified, and the attribute exists already, errno is set to EEXIST. If XATTR_REPLACE is specified, and the
      attribute does not exist, errno
      is set to ENOATTR.
If there is insufficient space remaining to store the
      extended attribute, errno is set
      to either ENOSPC, or
      EDQUOT if quota enforcement
      was the cause.
If extended attributes are not supported by the file
      system, or are disabled, errno
      is set to ENOTSUP.
The errors documented for the stat(2) system call are
      also applicable here.

 
VERSIONS
These system calls have been available on Linux since
      kernel 2.4; glibc support is provided since version 2.3.

 
CONFORMING TO
These system calls are Linux-specific.

 
SEE ALSO
getfattr(1), setfattr(1), getxattr(2), listxattr(2), open(2), removexattr(2), stat(2), attr(5), symlink(7)

 
COLOPHON
This page is part of release 3.33 of the Linux man-pages project. A
      description of the project, and information about reporting
      bugs, can be found at http://man7.org/linux/man-pages/.

                  Extended attributes system calls manual pages

                  Copyright (C) Andreas Gruenbacher, February 2001

                  Copyright (C) Silicon Graphics Inc, September 2001

                  This is free documentation; you can redistribute it and/or

                  modify it under the terms of the GNU General Public License as

                  published by the Free Software Foundation; either version 2 of

                  the License, or (at your option) any later version.

                  The GNU General Public License's references to "object code"

                  and "executables" are to be interpreted as the output of any

                  document formatting or typesetting system, including

                  intermediate and printed output.

                  This manual is distributed in the hope that it will be useful,

                  but WITHOUT ANY WARRANTY; without even the implied warranty of

                  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the

                  GNU General Public License for more details.

                  You should have received a copy of the GNU General Public

                  License along with this manual; if not, write to the Free

                  Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111,

                  USA.

