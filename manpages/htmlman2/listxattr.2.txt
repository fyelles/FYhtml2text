

Linux
          manual pages
Section 2
 

 
 

Name
listxattr, llistxattr, flistxattr — list extended
      attribute names

Synopsis

#include <sys/types.h>
#include <attr/xattr.h>

ssize_t
            listxattr(
const char *path,

 
char *list,

 
size_t size);

           
        

ssize_t
            llistxattr(
const char *path,

 
char *list,

 
size_t size);

           
        

ssize_t
            flistxattr(
int fd,

 
char *list,

 
size_t size);

           
        

 
DESCRIPTION
Extended attributes are name:value pairs associated with
      inodes (files, directories, symbolic links, etc.). They are
      extensions to the normal attributes which are associated with
      all inodes in the system (i.e., the stat(2) data). A complete
      overview of extended attributes concepts can be found in
      attr(5).
listxattr() retrieves the
      list of extended
      attribute names associated with the given path in the file system. The
      list is the set of (null-terminated) names, one after the
      other. Names of extended attributes to which the calling
      process does not have access may be omitted from the list.
      The length of the attribute name list is returned.
llistxattr() is identical to
      listxattr(), except in the case
      of a symbolic link, where the list of names of extended
      attributes associated with the link itself is retrieved, not
      the file that it refers to.
flistxattr() is identical to
      listxattr(), only the open file
      referred to by fd (as
      returned by open(2)) is interrogated in
      place of path.
A single extended attribute name is a simple
      null-terminated string. The name includes a namespace prefix;
      there may be several, disjoint namespaces associated with an
      individual inode.
An empty buffer of size zero can be passed into
      these calls to return the current size of the list of
      extended attribute names, which can be used to estimate the
      size of a buffer which is sufficiently large to hold the list
      of names.

 
Example
The list of
        names is returned as an unordered array of null-terminated
        character strings (attribute names are separated by null
        bytes ('\0')), like this:

user.name1\0system.name1\0user.name2\0

Filesystems like ext2, ext3 and XFS which implement
        POSIX ACLs using extended attributes, might return a
        list like this:

system.posix_acl_access\0system.posix_acl_default\0

 
RETURN VALUE
On success, a positive number is returned indicating the
      size of the extended attribute name list. On failure,
      −1 is returned and errno
      is set appropriately.
If the size of the
      list buffer is too
      small to hold the result, errno
      is set to ERANGE.
If extended attributes are not supported by the file
      system, or are disabled, errno
      is set to ENOTSUP.
The errors documented for the stat(2) system call are
      also applicable here.

 
VERSIONS
These system calls have been available on Linux since
      kernel 2.4; glibc support is provided since version 2.3.

 
CONFORMING TO
These system calls are Linux-specific.

 
SEE ALSO
getfattr(1), setfattr(1), getxattr(2), open(2), removexattr(2), setxattr(2), stat(2), attr(5), symlink(7)

 
COLOPHON
This page is part of release 3.33 of the Linux man-pages project. A
      description of the project, and information about reporting
      bugs, can be found at http://man7.org/linux/man-pages/.

                  Extended attributes system calls manual pages

                  Copyright (C) Andreas Gruenbacher, February 2001

                  Copyright (C) Silicon Graphics Inc, September 2001

                  This is free documentation; you can redistribute it and/or

                  modify it under the terms of the GNU General Public License as

                  published by the Free Software Foundation; either version 2 of

                  the License, or (at your option) any later version.

                  The GNU General Public License's references to "object code"

                  and "executables" are to be interpreted as the output of any

                  document formatting or typesetting system, including

                  intermediate and printed output.

                  This manual is distributed in the hope that it will be useful,

                  but WITHOUT ANY WARRANTY; without even the implied warranty of

                  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the

                  GNU General Public License for more details.

                  You should have received a copy of the GNU General Public

                  License along with this manual; if not, write to the Free

                  Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111,

                  USA.

