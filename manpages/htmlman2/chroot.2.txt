

Linux
          manual pages
Section 2
 

 
 

Name
chroot — change root directory

Synopsis

#include <unistd.h>

int
            chroot(
const char *path);

           
        

Note

Feature Test Macro Requirements
                      for glibc (see feature_test_macros(7)):

chroot():

Since
                      glibc 2.2.2:

_BSD_SOURCE ||
                      (_XOPEN_SOURCE
                      >= 500 || _XOPEN_SOURCE &&
                      _XOPEN_SOURCE_EXTENDED)
                      && !(_POSIX_C_SOURCE >=
                      200112L || _XOPEN_SOURCE >=
                      600)

Before
                      glibc 2.2.2:

none

 
DESCRIPTION
chroot() changes the root
      directory of the calling process to that specified in
      path. This directory
      will be used for pathnames beginning with /. The root directory is inherited by all
      children of the calling process.
Only a privileged process (Linux: one with the
      CAP_SYS_CHROOT capability) may
      call chroot().
This call changes an ingredient in the pathname resolution
      process and does nothing else.
This call does not change the current working directory,
      so that after the call '.' can
      be outside the tree rooted at '/'. In particular, the superuser can escape
      from a "chroot jail" by doing:

    mkdir foo; chroot foo; cd ..

This call does not close open file descriptors, and such
      file descriptors may allow access to files outside the chroot
      tree.

 
RETURN VALUE
On success, zero is returned. On error, −1 is
      returned, and errno is set
      appropriately.

 
ERRORS
Depending on the file system, other errors can be
      returned. The more general errors are listed below:

EACCES

Search permission is denied on a component of the
            path prefix. (See also path_resolution(7).)

EFAULT

path points
            outside your accessible address space.

EIO

An I/O error occurred.

ELOOP

Too many symbolic links were encountered in
            resolving path.

ENAMETOOLONG

path is too
            long.

ENOENT

The file does not exist.

ENOMEM

Insufficient kernel memory was available.

ENOTDIR

A component of path is not a
            directory.

EPERM

The caller has insufficient privilege.

 
CONFORMING TO
SVr4, 4.4BSD, SUSv2 (marked LEGACY). This function is not
      part of POSIX.1-2001.

 
NOTES
A child process created via fork(2) inherits its
      parent's root directory. The root directory is left unchanged
      by execve(2).
FreeBSD has a stronger jail() system call.

 
SEE ALSO
chdir(2), path_resolution(7)

 
COLOPHON
This page is part of release 3.33 of the Linux man-pages project. A
      description of the project, and information about reporting
      bugs, can be found at http://man7.org/linux/man-pages/.

                  Copyright (c) 1992 Drew Eckhardt (drewdocument.write('@');(@)cs.colorado.edu), March 28, 1992

                  Permission is granted to make and distribute verbatim copies of this

                  manual provided the copyright notice and this permission notice are

                  preserved on all copies.

                  Permission is granted to copy and distribute modified versions of this

                  manual under the conditions for verbatim copying, provided that the

                  entire resulting derived work is distributed under the terms of a

                  permission notice identical to this one.

                  Since the Linux kernel and libraries are constantly changing, this

                  manual page may be incorrect or out-of-date.  The author(s) assume no

                  responsibility for errors or omissions, or for damages resulting from

                  the use of the information contained herein.  The author(s) may not

                  have taken the same level of care in the production of this manual,

                  which is licensed free of charge, as they might when working

                  professionally.

                  Formatted or processed versions of this manual, if unaccompanied by

                  the source, must acknowledge the copyright and authors of this work.

                  Modified by Michael Haardt <michaeldocument.write('@');(@)moria.de>

                  Modified 1993-07-21 by Rik Faith <faithdocument.write('@');(@)cs.unc.edu>

                  Modified 1994-08-21 by Michael Chastain <mecdocument.write('@');(@)shell.portal.com>

                  Modified 1996-06-13 by aeb
                  Modified 1996-11-06 by Eric S. Raymond <esrdocument.write('@');(@)thyrsus.com>

                  Modified 1997-08-21 by Joseph S. Myers <jsm28document.write('@');(@)cam.ac.uk>

                  Modified 2004-06-23 by Michael Kerrisk <mtk.manpagesdocument.write('@');(@)gmail.com>

