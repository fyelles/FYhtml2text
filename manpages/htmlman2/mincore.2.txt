

Linux
          manual pages
Section 2
 

 
 

Name
mincore — determine whether pages are resident in
      memory

Synopsis

#include <unistd.h>
#include <sys/mman.h>

int
            mincore(
void *addr,

 
size_t length,

 
unsigned char *vec);

           
        

Note

Feature Test Macro Requirements
                      for glibc (see feature_test_macros(7)):

mincore():

_BSD_SOURCE ||
                      _SVID_SOURCE

 
DESCRIPTION
mincore() returns a vector
      that indicates whether pages of the calling process's virtual
      memory are resident in core (RAM), and so will not cause a
      disk access (page fault) if referenced. The kernel returns
      residency information about the pages starting at the address
      addr, and continuing
      for length bytes.
The addr argument
      must be a multiple of the system page size. The length argument need not be a
      multiple of the page size, but since residency information is
      returned for whole pages, length is effectively rounded
      up to the next multiple of the page size. One may obtain the
      page size (PAGE_SIZE) using
      sysconf(_SC_PAGESIZE).
The vec argument
      must point to an array containing at least (length+PAGE_SIZE−1) /
      PAGE_SIZE bytes. On return, the least significant
      bit of each byte will be set if the corresponding page is
      currently resident in memory, and be clear otherwise. (The
      settings of the other bits in each byte are undefined; these
      bits are reserved for possible later use.) Of course the
      information returned in vec is only a snapshot: pages
      that are not locked in memory can come and go at any moment,
      and the contents of vec may already be stale by the
      time this call returns.

 
RETURN VALUE
On success, mincore()
      returns zero. On error, −1 is returned, and
      errno is set appropriately.

 
ERRORS
EAGAIN kernel is
      temporarily out of resources.

EFAULT

vec points
            to an invalid address.

EINVAL

addr is not
            a multiple of the page size.

ENOMEM

length is
            greater than (TASK_SIZE
            − addr).
            (This could occur if a negative value is specified for
            length, since
            that value will be interpreted as a large unsigned
            integer.) In Linux 2.6.11 and earlier, the error
            EINVAL was returned for
            this condition.

ENOMEM

addr to
            addr +
            length
            contained unmapped memory.

 
VERSIONS
Available since Linux 2.3.99pre1 and glibc 2.2.

 
CONFORMING TO
mincore() is not specified
      in POSIX.1-2001, and it is not available on all UNIX
      implementations.

 
BUGS
Before kernel 2.6.21, mincore() did not return correct
      information for MAP_PRIVATE
      mappings, or for nonlinear mappings (established using
      remap_file_pages(2)).

 
SEE ALSO
mlock(2), mmap(2)

 
COLOPHON
This page is part of release 3.33 of the Linux man-pages project. A
      description of the project, and information about reporting
      bugs, can be found at http://man7.org/linux/man-pages/.

                  Copyright (C) 2001 Bert Hubert <ahudocument.write('@');(@)ds9a.nl>

                  and Copyright (C) 2007 Michael Kerrisk <mtk.manpagesdocument.write('@');(@)gmail.com>

                  Permission is granted to make and distribute verbatim copies of this

                  manual provided the copyright notice and this permission notice are

                  preserved on all copies.

                  Permission is granted to copy and distribute modified versions of this

                  manual under the conditions for verbatim copying, provided that the

                  entire resulting derived work is distributed under the terms of a

                  permission notice identical to this one.

                  Since the Linux kernel and libraries are constantly changing, this

                  manual page may be incorrect or out-of-date.  The author(s) assume no

                  responsibility for errors or omissions, or for damages resulting from

                  the use of the information contained herein.  The author(s) may not

                  have taken the same level of care in the production of this manual,

                  which is licensed free of charge, as they might when working

                  professionally.

                  Formatted or processed versions of this manual, if unaccompanied by

                  the source, must acknowledge the copyright and authors of this work.

                  Created Sun Jun 3 17:23:32 2001 by bert hubert <ahudocument.write('@');(@)ds9a.nl>

                  Slightly adapted, following comments by Hugh Dickins, aeb, 2001-06-04.

                  Modified, 20 May 2003, Michael Kerrisk <mtk.manpagesdocument.write('@');(@)gmail.com>

                  Modified, 30 Apr 2004, Michael Kerrisk <mtk.manpagesdocument.write('@');(@)gmail.com>

                  2005-04-05 mtk, Fixed error descriptions

                  after message from <gordon.jindocument.write('@');(@)intel.com>

                  2007-01-08 mtk, rewrote various parts

