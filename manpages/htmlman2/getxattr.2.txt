

Linux
          manual pages
Section 2
 

 
 

Name
getxattr, lgetxattr, fgetxattr — retrieve an
      extended attribute value

Synopsis

#include <sys/types.h>
#include <attr/xattr.h>

ssize_t
            getxattr(
const char *path,

 
const char *name,

 
void *value,

 
size_t size);

           
        

ssize_t
            lgetxattr(
const char *path,

 
const char *name,

 
void *value,

 
size_t size);

           
        

ssize_t
            fgetxattr(
int fd,

 
const char *name,

 
void *value,

 
size_t size);

           
        

 
DESCRIPTION
Extended attributes are name:value pairs associated with
      inodes (files, directories, symbolic links, etc.). They are
      extensions to the normal attributes which are associated with
      all inodes in the system (i.e., the stat(2) data). A complete
      overview of extended attributes concepts can be found in
      attr(5).
getxattr() retrieves the
      value of the extended
      attribute identified by name and associated with the
      given path in the
      file system. The length of the attribute value is returned.
lgetxattr() is identical to
      getxattr(), except in the case
      of a symbolic link, where the link itself is interrogated,
      not the file that it refers to.
fgetxattr() is identical to
      getxattr(), only the open file
      referred to by fd (as
      returned by open(2)) is interrogated in
      place of path.
An extended attribute name is a simple
      null-terminated string. The name includes a namespace prefix;
      there may be several, disjoint namespaces associated with an
      individual inode. The value of an extended attribute is a
      chunk of arbitrary textual or binary data of specified
      length.
An empty buffer of size zero can be passed into
      these calls to return the current size of the named extended
      attribute, which can be used to estimate the size of a buffer
      which is sufficiently large to hold the value associated with
      the extended attribute.
The interface is designed to allow guessing of initial
      buffer sizes, and to enlarge buffers when the return value
      indicates that the buffer provided was too small.

 
RETURN VALUE
On success, a positive number is returned indicating the
      size of the extended attribute value. On failure, −1 is
      returned and errno is set
      appropriately.
If the named attribute does not exist, or the process has
      no access to this attribute, errno is set to ENOATTR.
If the size of the
      value buffer is too
      small to hold the result, errno
      is set to ERANGE.
If extended attributes are not supported by the file
      system, or are disabled, errno
      is set to ENOTSUP.
The errors documented for the stat(2) system call are
      also applicable here.

 
VERSIONS
These system calls have been available on Linux since
      kernel 2.4; glibc support is provided since version 2.3.

 
CONFORMING TO
These system calls are Linux-specific.

 
SEE ALSO
getfattr(1), setfattr(1), listxattr(2), open(2), removexattr(2), setxattr(2), stat(2), attr(5), symlink(7)

 
COLOPHON
This page is part of release 3.33 of the Linux man-pages project. A
      description of the project, and information about reporting
      bugs, can be found at http://man7.org/linux/man-pages/.

                  Extended attributes system calls manual pages

                  Copyright (C) Andreas Gruenbacher, February 2001

                  Copyright (C) Silicon Graphics Inc, September 2001

                  This is free documentation; you can redistribute it and/or

                  modify it under the terms of the GNU General Public License as

                  published by the Free Software Foundation; either version 2 of

                  the License, or (at your option) any later version.

                  The GNU General Public License's references to "object code"

                  and "executables" are to be interpreted as the output of any

                  document formatting or typesetting system, including

                  intermediate and printed output.

                  This manual is distributed in the hope that it will be useful,

                  but WITHOUT ANY WARRANTY; without even the implied warranty of

                  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the

                  GNU General Public License for more details.

                  You should have received a copy of the GNU General Public

                  License along with this manual; if not, write to the Free

                  Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111,

                  USA.

