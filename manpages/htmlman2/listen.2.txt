

Linux
          manual pages
Section 2
 

 
 

Name
listen — listen for connections on a socket

Synopsis

#include <sys/types.h>           /* See NOTES */
#include <sys/socket.h>

int
            listen(
int sockfd,

 
int backlog);

           
        

 
DESCRIPTION
listen() marks the socket
      referred to by sockfd
      as a passive socket, that is, as a socket that will be used
      to accept incoming connection requests using accept(2).
The sockfd
      argument is a file descriptor that refers to a socket of type
      SOCK_STREAM or SOCK_SEQPACKET.
The backlog
      argument defines the maximum length to which the queue of
      pending connections for sockfd may grow. If a
      connection request arrives when the queue is full, the client
      may receive an error with an indication of ECONNREFUSED or, if the underlying
      protocol supports retransmission, the request may be ignored
      so that a later reattempt at connection succeeds.

 
RETURN VALUE
On success, zero is returned. On error, −1 is
      returned, and errno is set
      appropriately.

 
ERRORS

EADDRINUSE

Another socket is already listening on the same
            port.

EBADF

The argument sockfd is not a valid
            descriptor.

ENOTSOCK

The argument sockfd is not a
            socket.

EOPNOTSUPP

The socket is not of a type that supports the
            listen() operation.

 
CONFORMING TO
4.4BSD, POSIX.1-2001. The listen() function call first appeared in
      4.2BSD.

 
NOTES
To accept connections, the following steps are
      performed:

A socket is created with socket(2).

The socket is bound to a local address using
                bind(2), so that
                other sockets may be connect(2)ed to
                it.

A willingness to accept incoming connections and
                a queue limit for incoming connections are
                specified with listen().

Connections are accepted with accept(2).

POSIX.1-2001 does not require the inclusion of
      <sys/types.h> and this header file is not required on
      Linux. However, some historical (BSD) implementations
      required this header file, and portable applications are
      probably wise to include it.
The behavior of the backlog argument on TCP sockets
      changed with Linux 2.2. Now it specifies the queue length for
      completely
      established sockets waiting to be accepted, instead of the
      number of incomplete connection requests. The maximum length
      of the queue for incomplete sockets can be set using
      /proc/sys/net/ipv4/tcp_max_syn_backlog.
      When syncookies are enabled there is no logical maximum
      length and this setting is ignored. See tcp(7) for more
      information.
If the backlog
      argument is greater than the value in /proc/sys/net/core/somaxconn, then it is
      silently truncated to that value; the default value in this
      file is 128. In kernels before 2.4.25, this limit was a hard
      coded value, SOMAXCONN, with
      the value 128.

 
EXAMPLE
See bind(2).

 
SEE ALSO
accept(2), bind(2), connect(2), socket(2), socket(7)

 
COLOPHON
This page is part of release 3.33 of the Linux man-pages project. A
      description of the project, and information about reporting
      bugs, can be found at http://man7.org/linux/man-pages/.

                    Copyright (c) 1983, 1991 The Regents of the University of California.

                  and Copyright (C) 2007, Michael Kerrisk <mtk.manpagesdocument.write('@');(@)gmail.com>

                  All rights reserved.

                  Redistribution and use in source and binary forms, with or without

                  modification, are permitted provided that the following conditions

                  are met:
                  1. Redistributions of source code must retain the above copyright

                     notice, this list of conditions and the following disclaimer.

                  2. Redistributions in binary form must reproduce the above copyright

                     notice, this list of conditions and the following disclaimer in the

                     documentation and/or other materials provided with the distribution.

                  3. All advertising materials mentioning features or use of this software

                     must display the following acknowledgement:

                  This product includes software developed by the University of

                  California, Berkeley and its contributors.

                  4. Neither the name of the University nor the names of its contributors

                     may be used to endorse or promote products derived from this software

                     without specific prior written permission.

                  THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND

                  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE

                  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE

                  ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE

                  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL

                  DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS

                  OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)

                  HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT

                  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY

                  OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF

                  SUCH DAMAGE.

                      $Id: listen.2,v 1.6 1999/05/18 14:10:32 freitag Exp $

                  Modified Fri Jul 23 22:07:54 1993 by Rik Faith <faithdocument.write('@');(@)cs.unc.edu>

                  Modified 950727 by aeb, following a suggestion by Urs Thuermann

                  <ursdocument.write('@');(@)isnogud.escape.de>
                  Modified Tue Oct 22 08:11:14 EDT 1996 by Eric S. Raymond <esrdocument.write('@');(@)thyrsus.com>

                  Modified 1998 by Andi Kleen

                  Modified 11 May 2001 by Sam Varshavchik <mrsamdocument.write('@');(@)courier-mta.com>

