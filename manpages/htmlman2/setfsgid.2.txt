

Linux
          manual pages
Section 2
 

 
 

Name
setfsgid — set group identity used for file system
      checks

Synopsis

#include <unistd.h>
/* glibc uses <sys/fsuid.h> */

int
            setfsgid(
uid_t fsgid);

           
        

 
DESCRIPTION
The system call setfsgid()
      sets the group ID that the Linux kernel uses to check for all
      accesses to the file system. Normally, the value of
      fsgid will shadow the
      value of the effective group ID. In fact, whenever the
      effective group ID is changed, fsgid will also be changed to
      the new value of the effective group ID.
Explicit calls to setfsuid(2) and
      setfsgid() are usually only
      used by programs such as the Linux NFS server that need to
      change what user and group ID is used for file access without
      a corresponding change in the real and effective user and
      group IDs. A change in the normal user IDs for a program such
      as the NFS server is a security hole that can expose it to
      unwanted signals. (But see below.)
setfsgid() will only succeed
      if the caller is the superuser or if fsgid matches either the real
      group ID, effective group ID, saved set-group-ID, or the
      current value of fsgid.

 
RETURN VALUE
On success, the previous value of fsgid is returned. On error,
      the current value of fsgid is returned.

 
VERSIONS
This system call is present in Linux since version
      1.2.

 
CONFORMING TO
setfsgid() is Linux-specific
      and should not be used in programs intended to be
      portable.

 
NOTES
When glibc determines that the argument is not a valid
      group ID, it will return −1 and set errno to EINVAL without attempting the system
      call.
Note that at the time this system call was introduced, a
      process could send a signal to a process with the same
      effective user ID. Today signal permission handling is
      slightly different.
The original Linux setfsgid() system call supported only
      16-bit group IDs. Subsequently, Linux 2.4 added setfsgid32() supporting 32-bit IDs. The
      glibc setfsgid() wrapper
      function transparently deals with the variation across kernel
      versions.

 
BUGS
No error messages of any kind are returned to the caller.
      At the very least, EPERM
      should be returned when the call fails (because the caller
      lacks the CAP_SETGID
      capability).

 
SEE ALSO
kill(2), setfsuid(2), capabilities(7), credentials(7)

 
COLOPHON
This page is part of release 3.33 of the Linux man-pages project. A
      description of the project, and information about reporting
      bugs, can be found at http://man7.org/linux/man-pages/.

                    Copyright (C) 1995, Thomas K. Dyas <tdyasdocument.write('@');(@)eden.rutgers.edu>

                  Permission is granted to make and distribute verbatim copies of this

                  manual provided the copyright notice and this permission notice are

                  preserved on all copies.

                  Permission is granted to copy and distribute modified versions of this

                  manual under the conditions for verbatim copying, provided that the

                  entire resulting derived work is distributed under the terms of a

                  permission notice identical to this one.

                  Since the Linux kernel and libraries are constantly changing, this

                  manual page may be incorrect or out-of-date.  The author(s) assume no

                  responsibility for errors or omissions, or for damages resulting from

                  the use of the information contained herein.  The author(s) may not

                  have taken the same level of care in the production of this manual,

                  which is licensed free of charge, as they might when working

                  professionally.

                  Formatted or processed versions of this manual, if unaccompanied by

                  the source, must acknowledge the copyright and authors of this work.

                  Created   1995-08-06 Thomas K. Dyas <tdyasdocument.write('@');(@)eden.rutgers.edu>

                  Modified  2000-07-01 aeb
                  Modified  2002-07-23 aeb
                  Modified, 27 May 2004, Michael Kerrisk <mtk.manpagesdocument.write('@');(@)gmail.com>

                      Added notes on capability requirements

