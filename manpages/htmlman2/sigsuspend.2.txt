

Linux
          manual pages
Section 2
 

 
 

Name
sigsuspend — wait for a signal

Synopsis

#include <signal.h>

int
            sigsuspend(
const sigset_t *mask);

           
        

Note

Feature Test Macro Requirements
                      for glibc (see feature_test_macros(7)):

sigsuspend():

_POSIX_C_SOURCE
                      >= 1 || _XOPEN_SOURCE ||
                      _POSIX_SOURCE

 
DESCRIPTION
sigsuspend() temporarily
      replaces the signal mask of the calling process with the mask
      given by mask and
      then suspends the process until delivery of a signal whose
      action is to invoke a signal handler or to terminate a
      process.
If the signal terminates the process, then sigsuspend() does not return. If the signal
      is caught, then sigsuspend()
      returns after the signal handler returns, and the signal mask
      is restored to the state before the call to sigsuspend().
It is not possible to block SIGKILL or SIGSTOP; specifying these signals in
      mask, has no effect
      on the process's signal mask.

 
RETURN VALUE
sigsuspend() always returns
      −1, normally with the error EINTR.

 
ERRORS

EFAULT

mask points
            to memory which is not a valid part of the process
            address space.

EINTR

The call was interrupted by a signal.

 
CONFORMING TO
POSIX.1-2001.

 
NOTES
Normally, sigsuspend() is
      used in conjunction with sigprocmask(2) in order to
      prevent delivery of a signal during the execution of a
      critical code section. The caller first blocks the signals
      with sigprocmask(2). When the
      critical code has completed, the caller then waits for the
      signals by calling sigsuspend()
      with the signal mask that was returned by sigprocmask(2) (in the
      oldset
      argument).
See sigsetops(3) for details on
      manipulating signal sets.

 
SEE ALSO
kill(2), pause(2), sigaction(2), signal(2), sigprocmask(2), sigwaitinfo(2), sigsetops(3), sigwait(3), signal(7)

 
COLOPHON
This page is part of release 3.33 of the Linux man-pages project. A
      description of the project, and information about reporting
      bugs, can be found at http://man7.org/linux/man-pages/.

                    Copyright (c) 2005 Michael Kerrisk

                  based on earlier work by faithdocument.write('@');(@)cs.unc.edu and

                  Mike Battersby <mibdocument.write('@');(@)deakin.edu.au>

                  Permission is granted to make and distribute verbatim copies of this

                  manual provided the copyright notice and this permission notice are

                  preserved on all copies.

                  Permission is granted to copy and distribute modified versions of this

                  manual under the conditions for verbatim copying, provided that the

                  entire resulting derived work is distributed under the terms of a

                  permission notice identical to this one.

                  Since the Linux kernel and libraries are constantly changing, this

                  manual page may be incorrect or out-of-date.  The author(s) assume no

                  responsibility for errors or omissions, or for damages resulting from

                  the use of the information contained herein.  The author(s) may not

                  have taken the same level of care in the production of this manual,

                  which is licensed free of charge, as they might when working

                  professionally.

                  Formatted or processed versions of this manual, if unaccompanied by

                  the source, must acknowledge the copyright and authors of this work.

                  2005-09-15, mtk, Created new page by splitting off from sigaction.2

