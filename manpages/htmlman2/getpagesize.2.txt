

Linux
          manual pages
Section 2
 

 
 

Name
getpagesize — get memory page size

Synopsis

#include <unistd.h>

int
            getpagesize(
void);
 

           
        

Note

Feature Test Macro Requirements
                      for glibc (see feature_test_macros(7)):

getpagesize():

Since
                      glibc 2.12:

_BSD_SOURCE ||
                      !(_POSIX_C_SOURCE >=
                      200112L || _XOPEN_SOURCE >=
                      600)

Before
                      glibc 2.12:

_BSD_SOURCE ||
                      _XOPEN_SOURCE
                      >= 500 || _XOPEN_SOURCE &&
                      _XOPEN_SOURCE_EXTENDED

 
DESCRIPTION
The function getpagesize()
      returns the number of bytes in a memory page, where "page" is
      a fixed-length block, the unit for memory allocation and file
      mapping performed by mmap(2).

 
CONFORMING TO
SVr4, 4.4BSD, SUSv2. In SUSv2 the getpagesize() call is labeled LEGACY, and
      in POSIX.1-2001 it has been dropped; HP-UX does not have this
      call.

 
NOTES
Portable applications should employ sysconf(_SC_PAGESIZE) instead
      of getpagesize():

#include <unistd.h>
long sz = sysconf(_SC_PAGESIZE);

(Most systems allow the synonym _SC_PAGE_SIZE for _SC_PAGESIZE.)
Whether getpagesize() is
      present as a Linux system call depends on the architecture.
      If it is, it returns the kernel symbol PAGE_SIZE, whose value depends on the
      architecture and machine model. Generally, one uses binaries
      that are dependent on the architecture but not on the machine
      model, in order to have a single binary distribution per
      architecture. This means that a user program should not find
      PAGE_SIZE at compile time from
      a header file, but use an actual system call, at least for
      those architectures (like sun4) where this dependency exists.
      Here libc4, libc5, glibc 2.0 fail because their getpagesize() returns a statically derived
      value, and does not use a system call. Things are OK in glibc
      2.1.

 
SEE ALSO
mmap(2), sysconf(3)

 
COLOPHON
This page is part of release 3.33 of the Linux man-pages project. A
      description of the project, and information about reporting
      bugs, can be found at http://man7.org/linux/man-pages/.

                    Copyright (C) 2001 Andries Brouwer <aebdocument.write('@');(@)cwi.nl>

                  Permission is granted to make and distribute verbatim copies of this

                  manual provided the copyright notice and this permission notice are

                  preserved on all copies.

                  Permission is granted to copy and distribute modified versions of this

                  manual under the conditions for verbatim copying, provided that the

                  entire resulting derived work is distributed under the terms of a

                  permission notice identical to this one.

                  Since the Linux kernel and libraries are constantly changing, this

                  manual page may be incorrect or out-of-date.  The author(s) assume no

                  responsibility for errors or omissions, or for damages resulting from

                  the use of the information contained herein.  The author(s) may not

                  have taken the same level of care in the production of this manual,

                  which is licensed free of charge, as they might when working

                  professionally.

                  Formatted or processed versions of this manual, if unaccompanied by

                  the source, must acknowledge the copyright and authors of this work.

