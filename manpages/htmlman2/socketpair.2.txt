

Linux
          manual pages
Section 2
 

 
 

Name
socketpair — create a pair of connected sockets

Synopsis

#include <sys/types.h>           /* See NOTES */
#include <sys/socket.h>

int
            socketpair(
int domain,

 
int type,

 
int protocol,

 
int sv[2]);

           
        

 
DESCRIPTION
The socketpair() call
      creates an unnamed pair of connected sockets in the specified
      domain, of the
      specified type, and
      using the optionally specified protocol. For further details
      of these arguments, see socket(2).
The descriptors used in referencing the new sockets are
      returned in sv[0] and
      sv[1]. The two
      sockets are indistinguishable.

 
RETURN VALUE
On success, zero is returned. On error, −1 is
      returned, and errno is set
      appropriately.

 
ERRORS

EAFNOSUPPORT

The specified address family is not supported on
            this machine.

EFAULT

The address sv does not specify a
            valid part of the process address space.

EMFILE

Too many descriptors are in use by this process.

ENFILE

The system limit on the total number of open files
            has been reached.

EOPNOTSUPP

The specified protocol does not support creation of
            socket pairs.

EPROTONOSUPPORT

The specified protocol is not supported on this
            machine.

 
CONFORMING TO
4.4BSD, POSIX.1-2001. The socketpair() function call appeared in
      4.2BSD. It is generally portable to/from non-BSD systems
      supporting clones of the BSD socket layer (including System V
      variants).

 
NOTES
On Linux, the only supported domain for this call is
      AF_UNIX (or synonymously,
      AF_LOCAL). (Most
      implementations have the same restriction.)
Since Linux 2.6.27, socketpair() supports the SOCK_NONBLOCK and SOCK_CLOEXEC flags described in socket(2).
POSIX.1-2001 does not require the inclusion of
      <sys/types.h> and this header file is not required on
      Linux. However, some historical (BSD) implementations
      required this header file, and portable applications are
      probably wise to include it.

 
SEE ALSO
pipe(2), read(2), socket(2), write(2), socket(7), unix(7)

 
COLOPHON
This page is part of release 3.33 of the Linux man-pages project. A
      description of the project, and information about reporting
      bugs, can be found at http://man7.org/linux/man-pages/.

                    Copyright (c) 1983, 1991 The Regents of the University of California.

                  All rights reserved.

                  Redistribution and use in source and binary forms, with or without

                  modification, are permitted provided that the following conditions

                  are met:
                  1. Redistributions of source code must retain the above copyright

                     notice, this list of conditions and the following disclaimer.

                  2. Redistributions in binary form must reproduce the above copyright

                     notice, this list of conditions and the following disclaimer in the

                     documentation and/or other materials provided with the distribution.

                  3. All advertising materials mentioning features or use of this software

                     must display the following acknowledgement:

                  This product includes software developed by the University of

                  California, Berkeley and its contributors.

                  4. Neither the name of the University nor the names of its contributors

                     may be used to endorse or promote products derived from this software

                     without specific prior written permission.

                  THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND

                  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE

                  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE

                  ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE

                  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL

                  DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS

                  OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)

                  HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT

                  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY

                  OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF

                  SUCH DAMAGE.

                      document.write('@');(@)(#)socketpair.2
                  6.4 (Berkeley) 3/10/91

                  Modified 1993-07-24 by Rik Faith <faithdocument.write('@');(@)cs.unc.edu>

                  Modified 1996-10-22 by Eric S. Raymond <esrdocument.write('@');(@)thyrsus.com>

                  Modified 2002-07-22 by Michael Kerrisk <mtk.manpagesdocument.write('@');(@)gmail.com>

                  Modified 2004-06-17 by Michael Kerrisk <mtk.manpagesdocument.write('@');(@)gmail.com>

                  2008-10-11, mtk: Add description of SOCK_NONBLOCK and SOCK_CLOEXEC

