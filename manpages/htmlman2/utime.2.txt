

Linux
          manual pages
Section 2
 

 
 

Name
utime, utimes — change file last access and
      modification times

Synopsis

#include <sys/types.h>
#include <utime.h>

int
            utime(
const char *filename,

 
const struct utimbuf *times);

           
        

#include <sys/time.h>

int
            utimes(
const char *filename,

 
const struct timeval times[2]);

           
        

 
DESCRIPTION
The utime() system call
      changes the access and modification times of the inode
      specified by filename
      to the actime and
      modtime fields of
      times
      respectively.
If times is NULL,
      then the access and modification times of the file are set to
      the current time.
Changing timestamps is permitted when: either the process
      has appropriate privileges, or the effective user ID equals
      the user ID of the file, or times is NULL and the process
      has write permission for the file.
The utimbuf structure
      is:

                  struct
utimbuf {

 
time_t

                   
actime;

                      /* access time */
                    

 
time_t

                   
modtime;

                      /* modification time */
                    

};

The utime() system call
      allows specification of timestamps with a resolution of 1
      second.
The utimes() system call is
      similar, but the times argument refers to an
      array rather than a structure. The elements of this array are
      timeval structures, which
      allow a precision of 1 microsecond for specifying timestamps.
      The timeval structure is:

                  struct
timeval {

 
long

                   
tv_sec;

                      /* seconds */
                    

 
long

                   
tv_usec;

                      /* microseconds */
                    

};

times[0] specifies
      the new access time, and times[1] specifies the new
      modification time. If times is NULL, then analogously
      to utime(), the access and
      modification times of the file are set to the current
      time.

 
RETURN VALUE
On success, zero is returned. On error, −1 is
      returned, and errno is set
      appropriately.

 
ERRORS

EACCES

Search permission is denied for one of the
            directories in the path prefix of path (see also
            path_resolution(7)).

EACCES

times is
            NULL, the caller's effective user ID does not match the
            owner of the file, the caller does not have write
            access to the file, and the caller is not privileged
            (Linux: does not have either the CAP_DAC_OVERRIDE or the CAP_FOWNER capability).

ENOENT

filename
            does not exist.

EPERM

times is not
            NULL, the caller's effective UID does not match the
            owner of the file, and the caller is not privileged
            (Linux: does not have the CAP_FOWNER capability).

EROFS

path
            resides on a read-only file system.

 
CONFORMING TO
utime(): SVr4, POSIX.1-2001.
      POSIX.1-2008 marks utime() as
      obsolete.
utimes(): 4.3BSD,
      POSIX.1-2001.

 
NOTES
Linux does not allow changing the timestamps on an
      immutable file, or setting the timestamps to something other
      than the current time on an append-only file.
In libc4 and libc5, utimes()
      is just a wrapper for utime()
      and hence does not allow a subsecond resolution.

 
SEE ALSO
chattr(1), futimesat(2), stat(2), utimensat(2), futimens(3), futimes(3)

 
COLOPHON
This page is part of release 3.33 of the Linux man-pages project. A
      description of the project, and information about reporting
      bugs, can be found at http://man7.org/linux/man-pages/.

                  Copyright (c) 1992 Drew Eckhardt (drewdocument.write('@');(@)cs.colorado.edu), March 28, 1992

                  Permission is granted to make and distribute verbatim copies of this

                  manual provided the copyright notice and this permission notice are

                  preserved on all copies.

                  Permission is granted to copy and distribute modified versions of this

                  manual under the conditions for verbatim copying, provided that the

                  entire resulting derived work is distributed under the terms of a

                  permission notice identical to this one.

                  Since the Linux kernel and libraries are constantly changing, this

                  manual page may be incorrect or out-of-date.  The author(s) assume no

                  responsibility for errors or omissions, or for damages resulting from

                  the use of the information contained herein.  The author(s) may not

                  have taken the same level of care in the production of this manual,

                  which is licensed free of charge, as they might when working

                  professionally.

                  Formatted or processed versions of this manual, if unaccompanied by

                  the source, must acknowledge the copyright and authors of this work.

                  Modified by Michael Haardt <michaeldocument.write('@');(@)moria.de>

                  Modified 1993-07-24 by Rik Faith <faithdocument.write('@');(@)cs.unc.edu>

                  Modified 1995-06-10 by Andries Brouwer <aebdocument.write('@');(@)cwi.nl>

                  Modified 2004-06-23 by Michael Kerrisk <mtk.manpagesdocument.write('@');(@)gmail.com>

                  Modified 2004-10-10 by Andries Brouwer <aebdocument.write('@');(@)cwi.nl>

