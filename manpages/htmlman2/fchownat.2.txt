

Linux
          manual pages
Section 2
 

 
 

Name
fchownat — change ownership of a file relative to a
      directory file descriptor

Synopsis

#include <fcntl.h> /* Definition of AT_* constants */
#include <unistd.h>

int
            fchownat(
int dirfd,

 
const char *pathname,

 
uid_t owner,

 
gid_t group,

 
int flags);

           
        

Note

Feature Test Macro Requirements
                      for glibc (see feature_test_macros(7)):

fchownat():

Since
                      glibc 2.10:

_XOPEN_SOURCE
                      >= 700 || _POSIX_C_SOURCE >=
                      200809L

Before
                      glibc 2.10:

_ATFILE_SOURCE

 
DESCRIPTION
The fchownat() system call
      operates in exactly the same way as chown(2), except for the
      differences described in this manual page.
If the pathname given in pathname is relative, then it
      is interpreted relative to the directory referred to by the
      file descriptor dirfd
      (rather than relative to the current working directory of the
      calling process, as is done by chown(2) for a relative
      pathname).
If pathname is
      relative and dirfd is
      the special value AT_FDCWD,
      then pathname is
      interpreted relative to the current working directory of the
      calling process (like chown(2)).
If pathname is
      absolute, then dirfd
      is ignored.
flags can either
      be 0, or include the following flag:

AT_SYMLINK_NOFOLLOW

If pathname
            is a symbolic link, do not dereference it: instead
            operate on the link itself, like lchown(2). (By
            default, fchownat()
            dereferences symbolic links, like chown(2).)

 
RETURN VALUE
On success, fchownat()
      returns 0. On error, −1 is returned and errno is set to indicate the error.

 
ERRORS
The same errors that occur for chown(2) can also occur for
      fchownat(). The following
      additional errors can occur for fchownat():

EBADF

dirfd is not
            a valid file descriptor.

EINVAL

Invalid flag specified in flags.

ENOTDIR

pathname is
            relative and dirfd is a file
            descriptor referring to a file other than a
            directory.

 
VERSIONS
fchownat() was added to
      Linux in kernel 2.6.16.

 
CONFORMING TO
POSIX.1-2008. A similar system call exists on Solaris.

 
NOTES
See openat(2) for an
      explanation of the need for fchownat().

 
SEE ALSO
chown(2), openat(2), path_resolution(7),
      symlink(7)

 
COLOPHON
This page is part of release 3.33 of the Linux man-pages project. A
      description of the project, and information about reporting
      bugs, can be found at http://man7.org/linux/man-pages/.

                  This manpage is Copyright (C) 2006, Michael Kerrisk

                  Permission is granted to make and distribute verbatim copies of this

                  manual provided the copyright notice and this permission notice are

                  preserved on all copies.

                  Permission is granted to copy and distribute modified versions of this

                  manual under the conditions for verbatim copying, provided that the

                  entire resulting derived work is distributed under the terms of a

                  permission notice identical to this one.

                  Since the Linux kernel and libraries are constantly changing, this

                  manual page may be incorrect or out-of-date.  The author(s) assume no

                  responsibility for errors or omissions, or for damages resulting from

                  the use of the information contained herein.  The author(s) may not

                  have taken the same level of care in the production of this manual,

                  which is licensed free of charge, as they might when working

                  professionally.

                  Formatted or processed versions of this manual, if unaccompanied by

                  the source, must acknowledge the copyright and authors of this work.

