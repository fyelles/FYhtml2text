

Linux
          manual pages
Section 2
 

 
 

Name
setuid — set user identity

Synopsis

#include <sys/types.h>
#include <unistd.h>

int
            setuid(
uid_t uid);

           
        

 
DESCRIPTION
setuid() sets the effective
      user ID of the calling process. If the effective UID of the
      caller is root, the real UID and saved set-user-ID are also
      set.
Under Linux, setuid() is
      implemented like the POSIX version with the _POSIX_SAVED_IDS feature. This allows a
      set-user-ID (other than root) program to drop all of its user
      privileges, do some un-privileged work, and then reengage the
      original effective user ID in a secure manner.
If the user is root or the program is set-user-ID-root,
      special care must be taken. The setuid() function checks the effective user
      ID of the caller and if it is the superuser, all
      process-related user ID's are set to uid. After this has occurred,
      it is impossible for the program to regain root
      privileges.
Thus, a set-user-ID-root program wishing to temporarily
      drop root privileges, assume the identity of an unprivileged
      user, and then regain root privileges afterward cannot use
      setuid(). You can accomplish
      this with seteuid(2).

 
RETURN VALUE
On success, zero is returned. On error, −1 is
      returned, and errno is set
      appropriately.

 
ERRORS

EAGAIN

The uid does
            not match the current uid and uid brings process over
            its RLIMIT_NPROC resource
            limit.

EPERM

The user is not privileged (Linux: does not have the
            CAP_SETUID capability)
            and uid does
            not match the real UID or saved set-user-ID of the
            calling process.

 
CONFORMING TO
SVr4, POSIX.1-2001. Not quite compatible with the 4.4BSD
      call, which sets all of the real, saved, and effective user
      IDs.

 
NOTES
Linux has the concept of the file system user ID, normally
      equal to the effective user ID. The setuid() call also sets the file system
      user ID of the calling process. See setfsuid(2).
If uid is
      different from the old effective UID, the process will be
      forbidden from leaving core dumps.
The original Linux setuid()
      system call supported only 16-bit user IDs. Subsequently,
      Linux 2.4 added setuid32()
      supporting 32-bit IDs. The glibc setuid() wrapper function transparently
      deals with the variation across kernel versions.

 
SEE ALSO
getuid(2), seteuid(2), setfsuid(2), setreuid(2), capabilities(7), credentials(7)

 
COLOPHON
This page is part of release 3.33 of the Linux man-pages project. A
      description of the project, and information about reporting
      bugs, can be found at http://man7.org/linux/man-pages/.

                    Copyright (C), 1994, Graeme W. Wilford (Wilf).

                  Permission is granted to make and distribute verbatim copies of this

                  manual provided the copyright notice and this permission notice are

                  preserved on all copies.

                  Permission is granted to copy and distribute modified versions of this

                  manual under the conditions for verbatim copying, provided that the

                  entire resulting derived work is distributed under the terms of a

                  permission notice identical to this one.

                  Since the Linux kernel and libraries are constantly changing, this

                  manual page may be incorrect or out-of-date.  The author(s) assume no

                  responsibility for errors or omissions, or for damages resulting from

                  the use of the information contained herein.  The author(s) may not

                  have taken the same level of care in the production of this manual,

                  which is licensed free of charge, as they might when working

                  professionally.

                  Formatted or processed versions of this manual, if unaccompanied by

                  the source, must acknowledge the copyright and authors of this work.

                  Fri Jul 29th 12:56:44 BST 1994  Wilf. <G.Wilforddocument.write('@');(@)ee.surrey.ac.uk>

                  Changes inspired by patch from Richard Kettlewell

                    <richarddocument.write('@');(@)greenend.org.uk>, aeb 970616.

                  Modified, 27 May 2004, Michael Kerrisk <mtk.manpagesdocument.write('@');(@)gmail.com>

                      Added notes on capability requirements

