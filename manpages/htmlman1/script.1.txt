

Linux
          manual pages
Section 1
 

 
 

Name
script — make typescript of terminal session

Synopsis

script [−a] [ −c COMMAND ] [−e] [−f] [−q] [−t] [file]

 
DESCRIPTION
Script makes
      a typescript of everything printed on your terminal. It is
      useful for students who need a hardcopy record of an
      interactive session as proof of an assignment, as the
      typescript file can be printed out later with lpr(1).
If the argument file is given, saves all
      dialogue in file. If
      no file name is given, the typescript is saved in the file
      typescript .
Options:

−a

Append the output to file or typescript , retaining the
            prior contents.

−c COMMAND

Run the COMMAND rather than an interactive shell.
            This makes it easy for a script to capture the output
            of a program that behaves differently when its stdout
            is not a tty.

−e

Return the exit code of the child process. Uses the
            same format as bash termination on signal termination
            exit code is 128+n.

−f

Flush output after each write. This is nice for
            telecooperation: One person does `mkfifo foo; script -f
            foo' and another can supervise real-time what is being
            done using `cat foo'.

−q

Be quiet.

−t

Output timing data to standard error. This data
            contains two fields, separated by a space. The first
            field indicates how much time elapsed since the
            previous output. The second field indicates how many
            characters were output this time. This information can
            be used to replay typescripts with realistic typing and
            output delays.

The script ends when the forked shell exits (a control-D to exit the Bourne
      shell (sh(1)), and exit, logout or control-d (if ignoreeof is not set) for
      the C-shell, csh(1)).
Certain interactive commands, such as vi(1), create garbage in the
      typescript file. Script works best with
      commands that do not manipulate the screen, the results are
      meant to emulate a hardcopy terminal.

 
ENVIRONMENT
The following environment variable is utilized by
      script:

SHELL

If the variable SHELL
            exists, the shell forked by script will be that
            shell. If SHELL is not
            set, the Bourne shell is assumed. (Most shells set this
            variable automatically).

 
SEE ALSO
csh(1) (for the history mechanism), scriptreplay(1).

 
HISTORY
The script
      command appeared in BSD3.0.

 
BUGS
Script
      places everything in
      the log file, including linefeeds and backspaces. This is not
      what the naive user expects.

 
AVAILABILITY
The script command is part of the util-linux package and
      is available from
      ftp://ftp.kernel.org/pub/linux/utils/util-linux/.

                    Copyright (c) 1980, 1990 Regents of the University of California.

                  All rights reserved.

                  Redistribution and use in source and binary forms, with or without

                  modification, are permitted provided that the following conditions

                  are met:
                  1. Redistributions of source code must retain the above copyright

                     notice, this list of conditions and the following disclaimer.

                  2. Redistributions in binary form must reproduce the above copyright

                     notice, this list of conditions and the following disclaimer in the

                     documentation and/or other materials provided with the distribution.

                  3. All advertising materials mentioning features or use of this software

                     must display the following acknowledgement:

                  This product includes software developed by the University of

                  California, Berkeley and its contributors.

                  4. Neither the name of the University nor the names of its contributors

                     may be used to endorse or promote products derived from this software

                     without specific prior written permission.

                  THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND

                  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE

                  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE

                  ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE

                  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL

                  DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS

                  OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)

                  HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT

                  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY

                  OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF

                  SUCH DAMAGE.

document.write('@');(@)(#)script.1
                  6.5 (Berkeley) 7/27/91

