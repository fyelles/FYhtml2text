

Linux
          manual pages
Section 4
 

 
 

Name
fd — floppy disk device

 
CONFIGURATION
Floppy drives are block devices with major number 2.
      Typically they are owned by root.floppy (i.e., user root,
      group floppy) and have either mode 0660 (access checking via
      group membership) or mode 0666 (everybody has access). The
      minor numbers encode the device type, drive number, and
      controller number. For each device type (that is, combination
      of density and track count) there is a base minor number. To
      this base number, add the drive's number on its controller
      and 128 if the drive is on the secondary controller. In the
      following device tables, n represents the drive
      number.
If you use formats with more tracks than supported by your
      drive, you may cause it mechanical damage. Trying once if
      more tracks than the usual 40/80 are supported should not
      damage it, but no warranty is given for that. If you are not
      sure, don't create device entries for those formats, so as to
      prevent their usage.
Drive-independent device files which automatically detect
      the media format and capacity:

Name
Base minor #

fdn
0

5.25 inch double density device files:

Name
Capac.
Cyl.
Sect.
Heads
Base minor #

fdnd360
360K
40
9
2
4

5.25 inch high density device files:

Name
Capac.
Cyl.
Sect.
Heads
Base minor #

fdnh360
360K
40
9
2
20

fdnh410
410K
41
10
2
48

fdnh420
420K
42
10
2
64

fdnh720
720K
80
9
2
24

fdnh880
880K
80
11
2
80

fdnh1200
1200K
80
15
2
8

fdnh1440
1440K
80
18
2
40

fdnh1476
1476K
82
18
2
56

fdnh1494
1494K
83
18
2
72

fdnh1600
1600K
80
20
2
92

3.5 inch double density device files:

Name
Capac.
Cyl.
Sect.
Heads
Base minor #

fdnD360
360K
80
9
1
12

fdnD720
720K
80
9
2
16

fdnD800
800K
80
10
2
120

fdnD1040
1040K
80
13
2
84

fdnD1120
1120K
80
14
2
88

3.5 inch high density device files:

Name
Capac.
Cyl.
Sect.
Heads
Base minor #

fdnH360
360K
40
9
2
12

fdnH720
720K
80
9
2
16

fdnH820
820K
82
10
2
52

fdnH830
830K
83
10
2
68

fdnH1440
1440K
80
18
2
28

fdnH1600
1600K
80
20
2
124

fdnH1680
1680K
80
21
2
44

fdnH1722
1722K
82
21
2
60

fdnH1743
1743K
83
21
2
76

fdnH1760
1760K
80
22
2
96

fdnH1840
1840K
80
23
2
116

fdnH1920
1920K
80
24
2
100

3.5 inch extra density device files:

Name
Capac.
Cyl.
Sect.
Heads
Base minor #

fdnE2880
2880K
80
36
2
32

fdnCompaQ
2880K
80
36
2
36

fdnE3200
3200K
80
40
2
104

fdnE3520
3520K
80
44
2
108

fdnE3840
3840K
80
48
2
112

 
DESCRIPTION
fd special files access the
      floppy disk drives in raw mode. The following ioctl(2) calls are
      supported by fd devices:

FDCLRPRM

clears the media information of a drive (geometry of
            disk in drive).

FDSETPRM

sets the media information of a drive. The media
            information will be lost when the media is changed.

FDDEFPRM

sets the media information of a drive (geometry of
            disk in drive). The media information will not be lost
            when the media is changed. This will disable
            autodetection. In order to reenable autodetection, you
            have to issue an FDCLRPRM.

FDGETDRVTYP

returns the type of a drive (name parameter). For
            formats which work in several drive types, FDGETDRVTYP returns a name which is
            appropriate for the oldest drive type which supports
            this format.

FDFLUSH

invalidates the buffer cache for the given
            drive.

FDSETMAXERRS

sets the error thresholds for reporting errors,
            aborting the operation, recalibrating, resetting, and
            reading sector by sector.

FDSETMAXERRS

gets the current error thresholds.

FDGETDRVTYP

gets the internal name of the drive.

FDWERRORCLR

clears the write error statistics.

FDWERRORGET

reads the write error statistics. These include the
            total number of write errors, the location and disk of
            the first write error, and the location and disk of the
            last write error. Disks are identified by a generation
            number which is incremented at (almost) each disk
            change.

FDTWADDLE

Switch the drive motor off for a few microseconds.
            This might be needed in order to access a disk whose
            sectors are too close together.

FDSETDRVPRM

sets various drive parameters.

FDGETDRVPRM

reads these parameters back.

FDGETDRVSTAT

gets the cached drive state (disk changed, write
            protected et al.)

FDPOLLDRVSTAT

polls the drive and return its state.

FDGETFDCSTAT

gets the floppy controller state.

FDRESET

resets the floppy controller under certain
            conditions.

FDRAWCMD

sends a raw command to the floppy controller.

For more precise information, consult also the
      <linux/fd.h>
      and <linux/fdreg.h> include files, as well as the
      floppycontrol(1) manual
      page.

 
FILES
/dev/fd*

 
NOTES
The various formats permit reading and writing many types
      of disks. However, if a floppy is formatted with an
      inter-sector gap that is too small, performance may drop, to
      the point of needing a few seconds to access an entire track.
      To prevent this, use interleaved formats.
It is not possible to read floppies which are formatted
      using GCR (group code recording), which is used by Apple II
      and Macintosh computers (800k disks).
Reading floppies which are hard sectored (one hole per
      sector, with the index hole being a little skewed) is not
      supported. This used to be common with older 8-inch
      floppies.

 
SEE ALSO
chown(1), floppycontrol(1), getfdprm(1), mknod(1), superformat(1), mount(8), setfdprm(8)

 
COLOPHON
This page is part of release 3.33 of the Linux man-pages project. A
      description of the project, and information about reporting
      bugs, can be found at http://man7.org/linux/man-pages/.

                    t
                  Copyright (c) 1993 Michael Haardt (michaeldocument.write('@');(@)cantor.informatik.rwth-aachen.de)

                  and 1994,1995 Alain Knaff (Alain.Knaffdocument.write('@');(@)imag.fr)

                  This is free documentation; you can redistribute it and/or

                  modify it under the terms of the GNU General Public License as

                  published by the Free Software Foundation; either version 2 of

                  the License, or (at your option) any later version.

                  The GNU General Public License's references to "object code"

                  and "executables" are to be interpreted as the output of any

                  document formatting or typesetting system, including

                  intermediate and printed output.

                  This manual is distributed in the hope that it will be useful,

                  but WITHOUT ANY WARRANTY; without even the implied warranty of

                  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the

                  GNU General Public License for more details.

                  You should have received a copy of the GNU General Public

                  License along with this manual; if not, write to the Free

                  Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111,

                  USA.

                  Modified, Sun Feb 26 15:00:02 1995, faithdocument.write('@');(@)cs.unc.edu

