

Linux
          manual pages
Section 3
 

 
 

Name
system — execute a shell command

Synopsis

#include <stdlib.h>

int
            system(
const char *command);

           
        

 
DESCRIPTION
system() executes a command
      specified in command
      by calling /bin/sh −c
command, and returns
      after the command has been completed. During execution of the
      command, SIGCHLD will be
      blocked, and SIGINT and
      SIGQUIT will be ignored.

 
RETURN VALUE
The value returned is −1 on error (e.g. fork(2) failed), and the
      return status of the command otherwise. This latter return
      status is in the format specified in wait(2). Thus, the exit
      code of the command will be WEXITSTATUS(status). In case
      /bin/sh could not be executed,
      the exit status will be that of a command that does
      exit(127).
If the value of command is NULL, system() returns nonzero if the shell is
      available, and zero if not.
system() does not affect the
      wait status of any other children.

 
CONFORMING TO
C89, C99, POSIX.1-2001.

 
NOTES
If the _XOPEN_SOURCE feature
      test macro is defined (before including any header files), then the macros
      described in wait(2) (WEXITSTATUS(), etc.) are made available
      when including <stdlib.h>
As mentioned, system()
      ignores SIGINT and SIGQUIT. This may make programs that call
      it from a loop uninterruptible, unless they take care
      themselves to check the exit status of the child. E.g.

    while (something) {
        int ret = system("foo");

        if (WIFSIGNALED(ret) &&
            (WTERMSIG(ret) == SIGINT || WTERMSIG(ret) == SIGQUIT))
                break;
    }

Do not use system() from a
      program with set-user-ID or set-group-ID privileges, because
      strange values for some environment variables might be used
      to subvert system integrity. Use the exec(3) family of functions
      instead, but not execlp(3) or execvp(3). system() will not, in fact, work properly
      from programs with set-user-ID or set-group-ID privileges on
      systems on which /bin/sh is
      bash version 2, since bash 2 drops privileges on startup.
      (Debian uses a modified bash which does not do this when
      invoked as sh.)
In versions of glibc before 2.1.3, the check for the
      availability of /bin/sh was not
      actually performed if command was NULL; instead it
      was always assumed to be available, and system() always returned 1 in this case.
      Since glibc 2.1.3, this check is performed because, even
      though POSIX.1-2001 requires a conforming implementation to
      provide a shell, that shell may not be available or
      executable if the calling program has previously called
      chroot(2) (which is not
      specified by POSIX.1-2001).
It is possible for the shell command to return 127, so
      that code is not a sure indication that the execve(2) call failed.

 
SEE ALSO
sh(1), signal(2), wait(2), exec(3)

 
COLOPHON
This page is part of release 3.33 of the Linux man-pages project. A
      description of the project, and information about reporting
      bugs, can be found at http://man7.org/linux/man-pages/.

                    Copyright (c) 1993 by Thomas Koenig (ig25document.write('@');(@)rz.uni-karlsruhe.de)

                  Permission is granted to make and distribute verbatim copies of this

                  manual provided the copyright notice and this permission notice are

                  preserved on all copies.

                  Permission is granted to copy and distribute modified versions of this

                  manual under the conditions for verbatim copying, provided that the

                  entire resulting derived work is distributed under the terms of a

                  permission notice identical to this one.

                  Since the Linux kernel and libraries are constantly changing, this

                  manual page may be incorrect or out-of-date.  The author(s) assume no

                  responsibility for errors or omissions, or for damages resulting from

                  the use of the information contained herein.  The author(s) may not

                  have taken the same level of care in the production of this manual,

                  which is licensed free of charge, as they might when working

                  professionally.

                  Formatted or processed versions of this manual, if unaccompanied by

                  the source, must acknowledge the copyright and authors of this work.

                  License.
                  Modified Sat Jul 24 17:51:15 1993 by Rik Faith (faithdocument.write('@');(@)cs.unc.edu)

                  Modified 11 May 1998 by Joseph S. Myers (jsm28document.write('@');(@)cam.ac.uk)

                  Modified 14 May 2001, 23 Sep 2001 by aeb

                  2004-12-20, mtk

