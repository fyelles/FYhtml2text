

Linux
          manual pages
Section 3
 

 
 

Name
getcwd, getwd, get_current_dir_name — Get current
      working directory

Synopsis

#include <unistd.h>

char
            *getcwd(
char *buf,

 
size_t size);

           
        

char
            *getwd(
char *buf);

           
        

char
            *get_current_dir_name(
void);
 

           
        

Note

Feature Test Macro Requirements
                      for glibc (see feature_test_macros(7)):

get_current_dir_name():

_GNU_SOURCE

getwd():

Since
                      glibc 2.12:

_BSD_SOURCE ||
                      (_XOPEN_SOURCE
                      >= 500 || _XOPEN_SOURCE &&
                      _XOPEN_SOURCE_EXTENDED)
                      && !(_POSIX_C_SOURCE >=
                      200809L || _XOPEN_SOURCE >=
                      700)

Before
                      glibc 2.12:

_BSD_SOURCE ||
                      _XOPEN_SOURCE
                      >= 500 || _XOPEN_SOURCE &&
                      _XOPEN_SOURCE_EXTENDED

 
DESCRIPTION
These functions return a null-terminated string containing
      an absolute pathname that is the current working directory of
      the calling process. The pathname is returned as the function
      result and via the argument buf, if present.
The getcwd() function copies
      an absolute pathname of the current working directory to the
      array pointed to by buf, which is of length
      size.
If the length of the absolute pathname of the current
      working directory, including the terminating null byte,
      exceeds size bytes,
      NULL is returned, and errno is
      set to ERANGE; an application
      should check for this error, and allocate a larger buffer if
      necessary.
As an extension to the POSIX.1-2001 standard, Linux
      (libc4, libc5, glibc) getcwd()
      allocates the buffer dynamically using malloc(3) if buf is NULL. In this case, the
      allocated buffer has the length size unless size is zero, when buf is allocated as big as
      necessary. The caller should free(3) the returned
      buffer.
get_current_dir_name() will
      malloc(3) an array big
      enough to hold the absolute pathname of the current working
      directory. If the environment variable PWD is set, and its value is correct, then
      that value will be returned. The caller should free(3) the returned
      buffer.
getwd() does not malloc(3) any memory. The
      buf argument should
      be a pointer to an array at least PATH_MAX bytes long. If the length of the
      absolute pathname of the current working directory, including
      the terminating null byte, exceeds PATH_MAX bytes, NULL is returned, and
      errno is set to ENAMETOOLONG. (Note that on some systems,
      PATH_MAX may not be a
      compile-time constant; furthermore, its value may depend on
      the file system, see pathconf(3).) For
      portability and security reasons, use of getwd() is deprecated.

 
RETURN VALUE
On success, these functions return a pointer to a string
      containing the pathname of the current working directory. In
      the case getcwd() and
      getwd() this is the same value
      as buf.
On failure, these functions return NULL, and errno is set to indicate the error. The
      contents of the array pointed to by buf are undefined on error.

 
ERRORS

EACCES

Permission to read or search a component of the
            filename was denied.

EFAULT

buf points
            to a bad address.

EINVAL

The size
            argument is zero and buf is not a NULL
            pointer.

EINVAL

getwd(): buf is NULL.

ENAMETOOLONG

getwd(): The size of
            the null-terminated absolute pathname string exceeds
            PATH_MAX bytes.

ENOENT

The current working directory has been unlinked.

ERANGE

The size
            argument is less than the length of the absolute
            pathname of the working directory, including the
            terminating null byte. You need to allocate a bigger
            array and try again.

 
CONFORMING TO
getcwd() conforms to
      POSIX.1-2001. Note however that POSIX.1-2001 leaves the
      behavior of getcwd()
      unspecified if buf is
      NULL.
getwd() is present in
      POSIX.1-2001, but marked LEGACY. POSIX.1-2008 removes the
      specification of getwd(). Use
      getcwd() instead. POSIX.1-2001
      does not define any errors for getwd().
get_current_dir_name() is a
      GNU extension.

 
NOTES
Under Linux, the function getcwd() is a system call (since 2.1.92).
      On older systems it would query /proc/self/cwd. If both system call and
      proc file system are missing, a generic implementation is
      called. Only in that case can these calls fail under Linux
      with EACCES.
These functions are often used to save the location of the
      current working directory for the purpose of returning to it
      later. Opening the current directory (".") and calling
      fchdir(2) to return is
      usually a faster and more reliable alternative when
      sufficiently many file descriptors are available, especially
      on platforms other than Linux.

 
SEE ALSO
chdir(2), fchdir(2), open(2), unlink(2), free(3), malloc(3)

 
COLOPHON
This page is part of release 3.35 of the Linux man-pages project. A
      description of the project, and information about reporting
      bugs, can be found at http://man7.org/linux/man-pages/.

                    Copyright (c) 1993 by Thomas Koenig (ig25document.write('@');(@)rz.uni-karlsruhe.de)

                  Permission is granted to make and distribute verbatim copies of this

                  manual provided the copyright notice and this permission notice are

                  preserved on all copies.

                  Permission is granted to copy and distribute modified versions of this

                  manual under the conditions for verbatim copying, provided that the

                  entire resulting derived work is distributed under the terms of a

                  permission notice identical to this one.

                  Since the Linux kernel and libraries are constantly changing, this

                  manual page may be incorrect or out-of-date.  The author(s) assume no

                  responsibility for errors or omissions, or for damages resulting from

                  the use of the information contained herein.  The author(s) may not

                  have taken the same level of care in the production of this manual,

                  which is licensed free of charge, as they might when working

                  professionally.

                  Formatted or processed versions of this manual, if unaccompanied by

                  the source, must acknowledge the copyright and authors of this work.

                  License.
                  Modified Wed Jul 21 22:35:42 1993 by Rik Faith (faithdocument.write('@');(@)cs.unc.edu)

                  Modified 18 Mar 1996 by Martin Schulze (joeydocument.write('@');(@)infodrom.north.de):

                    Corrected description of getwd().

                  Modified Sat Aug 21 12:32:12 MET 1999 by aeb - applied fix by aj

                  Modified Mon Dec 11 13:32:51 MET 2000 by aeb

                  Modified Thu Apr 22 03:49:15 CEST 2002 by Roger Luethi <rldocument.write('@');(@)hellgate.ch>

