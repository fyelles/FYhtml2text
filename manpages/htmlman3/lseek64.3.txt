

Linux
          manual pages
Section 3
 

 
 

Name
lseek64 — reposition 64-bit read/write file
      offset

Synopsis

#define _LARGEFILE64_SOURCE      /* See feature_test_macros(7) */
#include <sys/types.h>
#include <unistd.h>

off64_t
            lseek64(
int fd,

 
off64_t offset,

 
int whence);

           
        

 
DESCRIPTION
The lseek(2) family of
      functions reposition the offset of the open file associated
      with the file descriptor fd to offset bytes relative to the
      start, current position, or end of the file, when whence has the value
      SEEK_SET, SEEK_CUR, or SEEK_END, respectively.
For more details, return value, and errors, see lseek(2).
Four interfaces are available: lseek(2), lseek64(), llseek(2), and the raw
      system call _llseek(2).

 
lseek
Prototype:

      off_t lseek(int fd, off_t offset, int whence);

lseek(2) uses the type
        off_t. This is a 32-bit signed
        type on 32-bit architectures, unless one compiles with

    #define _FILE_OFFSET_BITS 64

in which case it is a 64-bit signed type.

 
lseek64
Prototype:

      off64_t lseek64(int fd, off64_t offset, int whence);

The library routine lseek64() uses a 64-bit type even when
        off_t is a 32-bit type. Its
        prototype (and the type off64_t)
        is available only when one compiles with

    #define _LARGEFILE64_SOURCE

The function lseek64() is
        available since glibc 2.1, and is defined to be an alias
        for llseek().

 
llseek
Prototype:

      loff_t llseek(int fd, loff_t offset, int whence);

The type loff_t is a 64-bit
        signed type. The library routine llseek() is available in libc5 and glibc
        and works without special defines. Its prototype was given
        in <unistd.h>
        with libc5, but glibc does not provide a prototype. This is
        bad, since a prototype is needed. Users should add the
        above prototype, or something equivalent, to their own
        source. When users complained about data loss caused by a
        miscompilation of e2fsck(8), glibc 2.1.3 added
        the link-time warning

"the “llseek” function may be
            dangerous; use “lseek64” instead."

This makes this function unusable if one desires a
        warning-free compilation.

 
_llseek
All the above functions are implemented in terms of this
        system call. The prototype is:

      int _llseek(int fd, off_t offset_hi, off_t offset_lo, loff_t *result, int whence);

For more details, see llseek(2).

 
SEE ALSO
llseek(2), lseek(2)

 
COLOPHON
This page is part of release 3.33 of the Linux man-pages project. A
      description of the project, and information about reporting
      bugs, can be found at http://man7.org/linux/man-pages/.

                    Copyright 2004 Andries Brouwer <aebdocument.write('@');(@)cwi.nl>.

                  Permission is granted to make and distribute verbatim copies of this

                  manual provided the copyright notice and this permission notice are

                  preserved on all copies.

                  Permission is granted to copy and distribute modified versions of this

                  manual under the conditions for verbatim copying, provided that the

                  entire resulting derived work is distributed under the terms of a

                  permission notice identical to this one.

                  Since the Linux kernel and libraries are constantly changing, this

                  manual page may be incorrect or out-of-date.  The author(s) assume no

                  responsibility for errors or omissions, or for damages resulting from

                  the use of the information contained herein.  The author(s) may not

                  have taken the same level of care in the production of this manual,

                  which is licensed free of charge, as they might when working

                  professionally.

                  Formatted or processed versions of this manual, if unaccompanied by

                  the source, must acknowledge the copyright and authors of this work.

