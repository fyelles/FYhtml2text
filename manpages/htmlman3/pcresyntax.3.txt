

Linux
          manual pages
Section 3
 

 
 

Name
PCRE — Perl-compatible regular expressions

 
PCRE REGULAR EXPRESSION SYNTAX SUMMARY
The full syntax and semantics of the regular expressions
      that are supported by PCRE are described in the pcrepattern(3)
      documentation. This document contains just a quick-reference
      summary of the syntax.

 
QUOTING

\x
where x is non-alphanumeric is a
                  literal x

\Q...\E
treat enclosed characters as
                  literal

 
CHARACTERS

\a
alarm, that is, the BEL character
                  (hex 07)

\cx
"control-x", where x is any ASCII
                  character

\e
escape (hex 1B)

\f
formfeed (hex 0C)

\n
newline (hex 0A)

\r
carriage return (hex 0D)

\t
tab (hex 09)

\ddd
character with octal code ddd, or
                  backreference

\xhh
character with hex code hh

\x{hhh..}
character with hex code hhh..

 
CHARACTER TYPES

.
any character except newline; in
                  dotall mode, any character whatsoever

\C
one byte, even in UTF-8 mode (best
                  avoided)

\d
a decimal digit

\D
a character that is not a decimal
                  digit

\h
a horizontal whitespace
                  character

\H
a character that is not a horizontal
                  whitespace character

\N
a character that is not a
                  newline

\p{xx}
a character with the xx property

\P{xx}
a character without the xx property

\R
a newline sequence

\s
a whitespace character

\S
a character that is not a whitespace
                  character

\v
a vertical whitespace character

\V
a character that is not a vertical
                  whitespace character

\w
a "word" character

\W
a "non-word" character

\X
an extended Unicode sequence

In PCRE, by default, \d, \D, \s, \S, \w, and \W recognize
      only ASCII characters, even in UTF-8 mode. However, this can
      be changed by setting the PCRE_UCP option.

 
GENERAL CATEGORY PROPERTIES FOR \p and \P

C
Other

Cc
Control

Cf
Format

Cn
Unassigned

Co
Private use

Cs
Surrogate

 

L
Letter

Ll
Lower case letter

Lm
Modifier letter

Lo
Other letter

Lt
Title case letter

Lu
Upper case letter

L&
Ll, Lu, or Lt

 

M
Mark

Mc
Spacing mark

Me
Enclosing mark

Mn
Non-spacing mark

 

N
Number

Nd
Decimal number

Nl
Letter number

No
Other number

 

P
Punctuation

Pc
Connector punctuation

Pd
Dash punctuation

Pe
Close punctuation

Pf
Final punctuation

Pi
Initial punctuation

Po
Other punctuation

Ps
Open punctuation

 

S
Symbol

Sc
Currency symbol

Sk
Modifier symbol

Sm
Mathematical symbol

So
Other symbol

 

Z
Separator

Zl
Line separator

Zp
Paragraph separator

Zs
Space separator

 
PCRE SPECIAL CATEGORY PROPERTIES FOR \p and \P

Xan
Alphanumeric: union of properties L
                  and N

Xps
POSIX space: property Z or tab, NL,
                  VT, FF, CR

Xsp
Perl space: property Z or tab, NL,
                  FF, CR

Xwd
Perl word: property Xan or
                  underscore

 
SCRIPT NAMES FOR \p AND \P
Arabic, Armenian, Avestan, Balinese, Bamum, Bengali,
      Bopomofo, Braille, Buginese, Buhid, Canadian_Aboriginal,
      Carian, Cham, Cherokee, Common, Coptic, Cuneiform, Cypriot,
      Cyrillic, Deseret, Devanagari, Egyptian_Hieroglyphs,
      Ethiopic, Georgian, Glagolitic, Gothic, Greek, Gujarati,
      Gurmukhi, Han, Hangul, Hanunoo, Hebrew, Hiragana,
      Imperial_Aramaic, Inherited, Inscriptional_Pahlavi,
      Inscriptional_Parthian, Javanese, Kaithi, Kannada, Katakana,
      Kayah_Li, Kharoshthi, Khmer, Lao, Latin, Lepcha, Limbu,
      Linear_B, Lisu, Lycian, Lydian, Malayalam, Meetei_Mayek,
      Mongolian, Myanmar, New_Tai_Lue, Nko, Ogham, Old_Italic,
      Old_Persian, Old_South_Arabian, Old_Turkic, Ol_Chiki, Oriya,
      Osmanya, Phags_Pa, Phoenician, Rejang, Runic, Samaritan,
      Saurashtra, Shavian, Sinhala, Sundanese, Syloti_Nagri,
      Syriac, Tagalog, Tagbanwa, Tai_Le, Tai_Tham, Tai_Viet, Tamil,
      Telugu, Thaana, Thai, Tibetan, Tifinagh, Ugaritic, Vai,
      Yi.

 
CHARACTER CLASSES

[...]
positive character class

[^...]
negative character class

[x-y]
range (can be used for hex
                  characters)

[[:xxx:]]
positive POSIX named set

[[:^xxx:]]
negative POSIX named set

 

alnum
alphanumeric

alpha
alphabetic

ascii
0-127

blank
space or tab

cntrl
control character

digit
decimal digit

graph
printing, excluding space

lower
lower case letter

print
printing, including space

punct
printing, excluding
                  alphanumeric

space
whitespace

upper
upper case letter

word
same as \w

xdigit
hexadecimal digit

In PCRE, POSIX character set names recognize only ASCII
      characters by default, but some of them use Unicode
      properties if PCRE_UCP is set. You can use \Q...\E inside a
      character class.

 
QUANTIFIERS

?
0 or 1, greedy

?+
0 or 1, possessive

??
0 or 1, lazy

*
0 or more, greedy

*+
0 or more, possessive

*?
0 or more, lazy

+
1 or more, greedy

++
1 or more, possessive

+?
1 or more, lazy

{n}
exactly n

{n,m}
at least n, no more than m,
                  greedy

{n,m}+
at least n, no more than m,
                  possessive

{n,m}?
at least n, no more than m,
                  lazy

{n,}
n or more, greedy

{n,}+
n or more, possessive

{n,}?
n or more, lazy

 
ANCHORS AND SIMPLE ASSERTIONS

\b
word boundary

\B
not a word boundary

^
start of subject also after internal
                  newline in multiline mode

\A
start of subject

$
end of subject also before newline
                  at end of subject also before internal newline in
                  multiline mode

\Z
end of subject also before newline
                  at end of subject

\z
end of subject

\G
first matching position in
                  subject

 
MATCH POINT RESET
\K reset start of match

 
ALTERNATION
expr|expr|expr...

 
CAPTURING

(...)
capturing group

(?<name>...)
named capturing group (Perl)

(?'name'...)
named capturing group (Perl)

(?P<name>...)
named capturing group (Python)

(?:...)
non-capturing group

(?|...)
non-capturing group; reset group
                  numbers for capturing groups in each
                  alternative

 
ATOMIC GROUPS
(?>...) atomic, non-capturing group

 
COMMENT
(?#....) comment (not nestable)

 
OPTION SETTING

(?i)
caseless

(?J)
allow duplicate names

(?m)
multiline

(?s)
single line (dotall)

(?U)
default ungreedy (lazy)

(?x)
extended (ignore white space)

(?-...)
unset option(s)

The following are recognized only at the start of a
      pattern or after one of the newline-setting options with
      similar syntax:

 (*NO_START_OPT) no start-match optimization (PCRE_NO_START_OPTIMIZE)
 (*UTF8)         set UTF-8 mode (PCRE_UTF8)
 (*UCP)          set PCRE_UCP (use Unicode properties for \d etc)

 
LOOKAHEAD AND LOOKBEHIND ASSERTIONS

(?=...)
positive look ahead

(?!...)
negative look ahead

(?<=...)
positive look behind

(?<!...)
negative look behind

Each top-level branch of a look behind must be of a fixed
      length.

 
BACKREFERENCES

\n
reference by number (can be
                  ambiguous)

\gn
reference by number

\g{n}
reference by number

\g{-n}
relative reference by number

\k<name>
reference by name (Perl)

\k'name'
reference by name (Perl)

\g{name}
reference by name (Perl)

\k{name}
reference by name (.NET)

(?P=name)
reference by name (Python)

 
SUBROUTINE REFERENCES (POSSIBLY RECURSIVE)

(?R)
recurse whole pattern

(?n)
call subpattern by absolute
                  number

(?+n)
call subpattern by relative
                  number

(?-n)
call subpattern by relative
                  number

(?&name)
call subpattern by name (Perl)

(?P>name)
call subpattern by name
                  (Python)

\g<name>
call subpattern by name
                  (Oniguruma)

\g'name'
call subpattern by name
                  (Oniguruma)

\g<n>
call subpattern by absolute number
                  (Oniguruma)

\g'n'
call subpattern by absolute number
                  (Oniguruma)

\g<+n>
call subpattern by relative number
                  (PCRE extension)

\g'+n'
call subpattern by relative number
                  (PCRE extension)

\g<-n>
call subpattern by relative number
                  (PCRE extension)

\g'-n'
call subpattern by relative number
                  (PCRE extension)

 
CONDITIONAL PATTERNS

(?(condition)yes-pattern)
 

(?(condition)yes-pattern|no-pattern)
 

 

(?(n)...
absolute reference condition

(?(+n)...
relative reference condition

(?(-n)...
relative reference condition

(?(<name>)...
named reference condition
                  (Perl)

(?('name')...
named reference condition
                  (Perl)

(?(name)...
named reference condition
                  (PCRE)

(?(R)...
overall recursion condition

(?(Rn)...
specific group recursion
                  condition

(?(R&name)...
specific recursion condition

(?(DEFINE)...
define subpattern for reference

(?(assert)...
assertion condition

 
BACKTRACKING CONTROL
The following act immediately they are reached:

(*ACCEPT)
force successful match

(*FAIL)
force backtrack; synonym (*F)

The following act only when a subsequent match failure
      causes a backtrack to reach them. They all force a match
      failure, but they differ in what happens afterwards. Those
      that advance the start-of-match point do so only if the
      pattern is not anchored.

(*COMMIT)
overall failure, no advance of
                  starting point

(*PRUNE)
advance to next starting
                  character

(*SKIP)
advance start to current matching
                  position

(*THEN)
local failure, backtrack to next
                  alternation

 
NEWLINE CONVENTIONS
These are recognized only at the very start of the pattern
      or after a (*BSR_...) or (*UTF8) or (*UCP) option.

(*CR)
carriage return only

(*LF)
linefeed only

(*CRLF)
carriage return followed by
                  linefeed

(*ANYCRLF)
all three of the above

(*ANY)
any Unicode newline sequence

 
WHAT \R MATCHES
These are recognized only at the very start of the pattern
      or after a (*...) option that sets the newline convention or
      UTF-8 or UCP mode.

 (*BSR_ANYCRLF)  CR, LF, or CRLF
 (*BSR_UNICODE)  any Unicode newline sequence

 
CALLOUTS

(?C)
callout

(?Cn)
callout with data n

 
SEE ALSO
pcrepattern(3), pcreapi(3), pcrecallout(3), pcrematching(3), pcre(3).

 
AUTHOR

Philip Hazel
University Computing Service
Cambridge CB2 3QH, England.

 
REVISION

Last updated: 21 November 2010
Copyright (c) 1997-2010 University of Cambridge.

COPYRIGHT

This manual page is taken from the PCRE library, which is distributed under
                the BSD license.

