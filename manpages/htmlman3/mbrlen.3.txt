

Linux
          manual pages
Section 3
 

 
 

Name
mbrlen — determine number of bytes in next multibyte
      character

Synopsis

#include <wchar.h>

size_t
            mbrlen(
const char *s,

 
size_t n,

 
mbstate_t *ps);

           
        

 
DESCRIPTION
The mbrlen() function
      inspects at most n
      bytes of the multibyte string starting at s and extracts the next
      complete multibyte character. It updates the shift state
      *ps. If the multibyte
      character is not the null wide character, it returns the
      number of bytes that were consumed from s. If the multibyte character
      is the null wide character, it resets the shift state
      *ps to the initial
      state and returns 0.
If the n bytes
      starting at s do not
      contain a complete multibyte character, mbrlen() returns (size_t) −2. This can happen
      even if n >=
      MB_CUR_MAX, if the multibyte
      string contains redundant shift sequences.
If the multibyte string starting at s contains an invalid multibyte
      sequence before the next complete character, mbrlen() returns (size_t) −1 and sets
      errno to EILSEQ. In this case, the effects on
      *ps are
      undefined.
If ps is a NULL
      pointer, a static anonymous state only known to the
      mbrlen() function is used
      instead.

 
RETURN VALUE
The mbrlen() function
      returns the number of bytes parsed from the multibyte
      sequence starting at s, if a non-null wide character
      was recognized. It returns 0, if a null wide character was
      recognized. It returns (size_t)
      −1 and sets errno to EILSEQ, if an invalid multibyte sequence
      was encountered. It returns (size_t) −2 if it couldn't
      parse a complete multibyte character, meaning that n should be increased.

 
CONFORMING TO
C99.

 
NOTES
The behavior of mbrlen()
      depends on the LC_CTYPE
      category of the current locale.

 
SEE ALSO
mbrtowc(3)

 
COLOPHON
This page is part of release 3.33 of the Linux man-pages project. A
      description of the project, and information about reporting
      bugs, can be found at http://man7.org/linux/man-pages/.

                    Copyright (c) Bruno Haible <haibledocument.write('@');(@)clisp.cons.org>

                  This is free documentation; you can redistribute it and/or

                  modify it under the terms of the GNU General Public License as

                  published by the Free Software Foundation; either version 2 of

                  the License, or (at your option) any later version.

                  References consulted:
                    GNU glibc-2 source code and manual

                    Dinkumware C library reference http://www.dinkumware.com/

                    OpenGroup's Single UNIX specification http://www.UNIX-systems.org/online.html

                    ISO/IEC 9899:1999

