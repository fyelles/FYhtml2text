

Linux
          manual pages
Section 3
 

 
 

Name
pthread_tryjoin_np, pthread_timedjoin_np — try to
      join with a terminated thread

Synopsis

#define _GNU_SOURCE              /* See feature_test_macros(7) */
#include <pthread.h>

int
            pthread_tryjoin_np(
pthread_t thread,

 
void **retval);

           
        

int
            pthread_timedjoin_np(
pthread_t thread,

 
void **retval,

 
const struct timespec *abstime);

           
        

Note

Compile and link with −pthread.

 
DESCRIPTION
These functions operate in the same way as pthread_join(3), except for
      the differences described on this page.
The pthread_tryjoin_np()
      function performs a nonblocking join with the thread
      thread, returning the
      exit status of the thread in *retval. If thread has not yet terminated,
      then instead of blocking, as is done by pthread_join(3), the call
      returns an error.
The pthread_timedjoin_np()
      function performs a join-with-timeout. If thread has not yet terminated,
      then the call blocks until a maximum time, specified in
      abstime. If the
      timeout expires before thread terminates, the call
      returns an error. The abstime argument is a structure
      of the following form, specifying an absolute time measured
      since the Epoch (see time(2)):

                  struct
timespec {

 
time_t

                   
tv_sec;

                      /* seconds */
                    

 
long

                   
tv_nsec;

                      /* nanoseconds */
                    

};

 
RETURN VALUE
On success, these functions return 0; on error, they
      return an error number.

 
ERRORS
These functions can fail with the same errors as pthread_join(3).
      pthread_tryjoin_np() can in
      addition fail with the following error:

EBUSY

thread had
            not yet terminated at the time of the call.

pthread_timedjoin_np() can
      in addition fail with the following error:

ETIMEDOUT

The call timed out before thread terminated.

pthread_timedjoin_np() never
      returns the error EINTR.

 
VERSIONS
These functions first appeared in glibc in version
      2.3.3.

 
CONFORMING TO
These functions are nonstandard GNU extensions; hence the
      suffix "_np" (nonportable) in the names.

 
EXAMPLE
The following code waits to join for up to 5 seconds:

    struct timespec ts;
    int s;

    ...

    if (clock_gettime(CLOCK_REALTIME, &ts) == −1) {
        /* Handle error */
    }

    ts.tv_sec += 5;

    s = pthread_timedjoin_np(thread, NULL, &ts);
    if (s != 0) {
        /* Handle error */
    }

 
SEE ALSO
clock_gettime(2), pthread_exit(3), pthread_join(3), pthreads(7)

 
COLOPHON
This page is part of release 3.33 of the Linux man-pages project. A
      description of the project, and information about reporting
      bugs, can be found at http://man7.org/linux/man-pages/.

                    Copyright (c) 2008 Linux Foundation, written by Michael Kerrisk

                      <mtk.manpagesdocument.write('@');(@)gmail.com>

                  Permission is granted to make and distribute verbatim copies of this

                  manual provided the copyright notice and this permission notice are

                  preserved on all copies.

                  Permission is granted to copy and distribute modified versions of this

                  manual under the conditions for verbatim copying, provided that the

                  entire resulting derived work is distributed under the terms of a

                  permission notice identical to this one.

                  Since the Linux kernel and libraries are constantly changing, this

                  manual page may be incorrect or out-of-date.  The author(s) assume no

                  responsibility for errors or omissions, or for damages resulting from

                  the use of the information contained herein.  The author(s) may not

                  have taken the same level of care in the production of this manual,

                  which is licensed free of charge, as they might when working

                  professionally.

                  Formatted or processed versions of this manual, if unaccompanied by

                  the source, must acknowledge the copyright and authors of this work.

