

Linux
          manual pages
Section 3
 

 
 

Name
setjmp, sigsetjmp — save stack context for nonlocal
      goto

Synopsis

#include <setjmp.h>

int
            setjmp(
jmp_buf env);

           
        

int
            sigsetjmp(
sigjmp_buf env,

 
int savesigs);

           
        

Note

Feature Test Macro Requirements
                      for glibc (see feature_test_macros(7)):

setjmp():

see
                      NOTES.

sigsetjmp():

_POSIX_C_SOURCE
                      >= 1 || _XOPEN_SOURCE ||
                      _POSIX_C_SOURCE

 
DESCRIPTION
setjmp() and longjmp(3) are useful for
      dealing with errors and interrupts encountered in a low-level
      subroutine of a program. setjmp() saves the stack
      context/environment in env for later use by longjmp(3). The stack
      context will be invalidated if the function which called
      setjmp() returns.
sigsetjmp() is similar to
      setjmp(). If, and only if,
      savesigs is nonzero,
      the process's current signal mask is saved in env and will be restored if a
      siglongjmp(3) is later
      performed with this env.

 
RETURN VALUE
setjmp() and sigsetjmp() return 0 if returning directly,
      and nonzero when returning from longjmp(3) or siglongjmp(3) using the
      saved context.

 
CONFORMING TO
C89, C99, and POSIX.1-2001 specify setjmp(). POSIX.1-2001 specifies
      sigsetjmp().

 
NOTES
POSIX does not specify whether setjmp() will save the signal mask. In
      System V it will not. In 4.3BSD it will, and there is a
      function _setjmp that will not.
      By default, Linux/glibc follows the System V behavior, but
      the BSD behavior is provided if the _BSD_SOURCE feature test macro is defined
      and none of _POSIX_SOURCE,
      _POSIX_C_SOURCE, _XOPEN_SOURCE, _XOPEN_SOURCE_EXTENDED, _GNU_SOURCE, or _SVID_SOURCE is defined.
If you want to portably save and restore signal masks, use
      sigsetjmp() and siglongjmp(3).
setjmp() and sigsetjmp() make programs hard to
      understand and maintain. If possible an alternative should be
      used.

 
SEE ALSO
longjmp(3), siglongjmp(3)

 
COLOPHON
This page is part of release 3.33 of the Linux man-pages project. A
      description of the project, and information about reporting
      bugs, can be found at http://man7.org/linux/man-pages/.

                    Written by Michael Haardt, Fri Nov 25 14:51:42 MET 1994

                  This is free documentation; you can redistribute it and/or

                  modify it under the terms of the GNU General Public License as

                  published by the Free Software Foundation; either version 2 of

                  the License, or (at your option) any later version.

                  The GNU General Public License's references to "object code"

                  and "executables" are to be interpreted as the output of any

                  document formatting or typesetting system, including

                  intermediate and printed output.

                  This manual is distributed in the hope that it will be useful,

                  but WITHOUT ANY WARRANTY; without even the implied warranty of

                  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the

                  GNU General Public License for more details.

                  You should have received a copy of the GNU General Public

                  License along with this manual; if not, write to the Free

                  Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111,

                  USA.

                  Added sigsetjmp, Sun Mar  2 22:03:05 EST 1997, jrvdocument.write('@');(@)vanzandt.mv.com

                  Modifications, Sun Feb 26 14:39:45 1995, faithdocument.write('@');(@)cs.unc.edu

                  "

