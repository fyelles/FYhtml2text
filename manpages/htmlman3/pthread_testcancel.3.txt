

Linux
          manual pages
Section 3
 

 
 

Name
pthread_testcancel — request delivery of any pending
      cancellation request

Synopsis

#include <pthread.h>

void
            pthread_testcancel(
void);
 

           
        

Note

Compile and link with −pthread.

 
DESCRIPTION
Calling pthread_testcancel()
      creates a cancellation point within the calling thread, so
      that a thread that is otherwise executing code that contains
      no cancellation points will respond to a cancellation
      request.
If cancelability is disabled (using pthread_setcancelstate(3)),
      or no cancellation request is pending, then a call to
      pthread_cancel(3) has no
      effect.

 
RETURN VALUE
This function does not return a value. If the calling
      thread is canceled as a consequence of a call to this
      function, then the function does not return.

 
ERRORS
This function always succeeds.

 
CONFORMING TO
POSIX.1-2001.

 
EXAMPLE
See pthread_cleanup_push(3).

 
SEE ALSO
pthread_cancel(3),
      pthread_cleanup_push(3),
      pthread_setcancelstate(3),
      pthreads(7)

 
COLOPHON
This page is part of release 3.33 of the Linux man-pages project. A
      description of the project, and information about reporting
      bugs, can be found at http://man7.org/linux/man-pages/.

                    Copyright (c) 2008 Linux Foundation, written by Michael Kerrisk

                      <mtk.manpagesdocument.write('@');(@)gmail.com>

                  Permission is granted to make and distribute verbatim copies of this

                  manual provided the copyright notice and this permission notice are

                  preserved on all copies.

                  Permission is granted to copy and distribute modified versions of this

                  manual under the conditions for verbatim copying, provided that the

                  entire resulting derived work is distributed under the terms of a

                  permission notice identical to this one.

                  Since the Linux kernel and libraries are constantly changing, this

                  manual page may be incorrect or out-of-date.  The author(s) assume no

                  responsibility for errors or omissions, or for damages resulting from

                  the use of the information contained herein.  The author(s) may not

                  have taken the same level of care in the production of this manual,

                  which is licensed free of charge, as they might when working

                  professionally.

                  Formatted or processed versions of this manual, if unaccompanied by

                  the source, must acknowledge the copyright and authors of this work.

