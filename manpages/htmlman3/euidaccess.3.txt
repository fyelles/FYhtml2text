

Linux
          manual pages
Section 3
 

 
 

Name
euidaccess, eaccess — check effective user's
      permissions for a file

Synopsis

#define _GNU_SOURCE              /* See feature_test_macros(7) */
#include <unistd.h>

int
            euidaccess(
const char *pathname,

 
int mode);

           
        

int
            eaccess(
const char *pathname,

 
int mode);

           
        

 
DESCRIPTION
Like access(2), euidaccess() checks permissions and
      existence of the file identified by its argument pathname. However, whereas
      access(2), performs checks
      using the real user and group identifiers of the process,
      euidaccess() uses the effective
      identifiers.
mode is a mask
      consisting of one or more of R_OK, W_OK,
      X_OK and F_OK, with the same meanings as for
      access(2).
eaccess() is a synonym for
      euidaccess(), provided for
      compatibility with some other systems.

 
RETURN VALUE
On success (all requested permissions granted), zero is
      returned. On error (at least one bit in mode asked for a permission
      that is denied, or some other error occurred), −1 is
      returned, and errno is set
      appropriately.

 
ERRORS
As for access(2).

 
VERSIONS
The eaccess() function was
      added to glibc in version 2.4.

 
CONFORMING TO
These functions are nonstandard. Some other systems have
      an eaccess() function.

 
NOTES

Warning

Using this function to check a process's
              permissions on a file before performing some
              operation based on that information leads to race
              conditions: the file permissions may change between
              the two steps. Generally, it is safer just to attempt
              the desired operation and handle any permission error
              that occurs.

This function always dereferences symbolic links. If you
      need to check the permissions on a symbolic link, use
      faccessat(2) with the flags
      AT_EACCESS and AT_SYMLINK_NOFOLLOW.

 
SEE ALSO
access(2), chmod(2), chown(2), faccessat(2), open(2), setgid(2), setuid(2), stat(2), credentials(7), path_resolution(7)

 
COLOPHON
This page is part of release 3.33 of the Linux man-pages project. A
      description of the project, and information about reporting
      bugs, can be found at http://man7.org/linux/man-pages/.

                  Copyright (C) 2007 Michael Kerrisk <mtk.manpagesdocument.write('@');(@)gmail.com>

                  Permission is granted to make and distribute verbatim copies of this

                  manual provided the copyright notice and this permission notice are

                  preserved on all copies.

                  Permission is granted to copy and distribute modified versions of this

                  manual under the conditions for verbatim copying, provided that the

                  entire resulting derived work is distributed under the terms of a

                  permission notice identical to this one.

                  Since the Linux kernel and libraries are constantly changing, this

                  manual page may be incorrect or out-of-date.  The author(s) assume no

                  responsibility for errors or omissions, or for damages resulting from

                  the use of the information contained herein.  The author(s) may not

                  have taken the same level of care in the production of this manual,

                  which is licensed free of charge, as they might when working

                  professionally.

                  Formatted or processed versions of this manual, if unaccompanied by

                  the source, must acknowledge the copyright and authors of this work.

