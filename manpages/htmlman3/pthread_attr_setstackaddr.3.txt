

Linux
          manual pages
Section 3
 

 
 

Name
pthread_attr_setstackaddr, pthread_attr_getstackaddr
      — set/get stack address attribute in thread attributes
      object

Synopsis

#include <pthread.h>

int
            pthread_attr_setstackaddr(
pthread_attr_t *attr,

 
void *stackaddr);

           
        

int
            pthread_attr_getstackaddr(
pthread_attr_t *attr,

 
void **stackaddr);

           
        

Note

Compile and link with −pthread.

 
DESCRIPTION
These functions are obsolete: do not use them. Use pthread_attr_setstack(3)
      and pthread_attr_getstack(3)
      instead.
The pthread_attr_setstackaddr() function sets
      the stack address attribute of the thread attributes object
      referred to by attr
      to the value specified in stackaddr. This attribute
      specifies the location of the stack that should be used by a
      thread that is created using the thread attributes object
      attr.
stackaddr should
      point to a buffer of at least PTHREAD_STACK_MIN bytes that was allocated
      by the caller. The pages of the allocated buffer should be
      both readable and writable.
The pthread_attr_getstackaddr() function
      returns the stack address attribute of the thread attributes
      object referred to by attr in the buffer pointed to
      by stackaddr.

 
RETURN VALUE
On success, these functions return 0; on error, they
      return a nonzero error number.

 
ERRORS
No errors are defined (but applications should
      nevertheless handle a possible error return).

 
VERSIONS
These functions are provided by glibc since version
      2.1.

 
CONFORMING TO
POSIX.1-2001 specifies these functions but marks them as
      obsolete. POSIX.1-2008 removes the specification of these
      functions.

 
NOTES
Do not use these
      functions! They cannot be portably used, since
      they provide no way of specifying the direction of growth or
      the range of the stack. For example, on architectures with a
      stack that grows downward, stackaddr specifies the next
      address past the highest
      address of the allocated stack area. However, on
      architectures with a stack that grows upward, stackaddr specifies the
      lowest address in the allocated
      stack area. By contrast, the stackaddr used by pthread_attr_setstack(3)
      and pthread_attr_getstack(3),
      is always a pointer to the lowest address in the allocated
      stack area (and the stacksize
      argument specifies the range of the stack).

 
SEE ALSO
pthread_attr_init(3),
      pthread_attr_setstack(3),
      pthread_attr_setstacksize(3),
      pthread_create(3),
      pthreads(7)

 
COLOPHON
This page is part of release 3.33 of the Linux man-pages project. A
      description of the project, and information about reporting
      bugs, can be found at http://man7.org/linux/man-pages/.

                    Copyright (c) 2008 Linux Foundation, written by Michael Kerrisk

                      <mtk.manpagesdocument.write('@');(@)gmail.com>

                  Permission is granted to make and distribute verbatim copies of this

                  manual provided the copyright notice and this permission notice are

                  preserved on all copies.

                  Permission is granted to copy and distribute modified versions of this

                  manual under the conditions for verbatim copying, provided that the

                  entire resulting derived work is distributed under the terms of a

                  permission notice identical to this one.

                  Since the Linux kernel and libraries are constantly changing, this

                  manual page may be incorrect or out-of-date.  The author(s) assume no

                  responsibility for errors or omissions, or for damages resulting from

                  the use of the information contained herein.  The author(s) may not

                  have taken the same level of care in the production of this manual,

                  which is licensed free of charge, as they might when working

                  professionally.

                  Formatted or processed versions of this manual, if unaccompanied by

                  the source, must acknowledge the copyright and authors of this work.

