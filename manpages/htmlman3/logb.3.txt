

Linux
          manual pages
Section 3
 

 
 

Name
logb, logbf, logbl — get exponent of a
      floating-point value

Synopsis

#include <math.h>

double
            logb(
double x);

           
        

float
            logbf(
float x);

           
        

long double
            logbl(
long double x);

           
        

Note

Feature Test Macro Requirements
                      for glibc (see feature_test_macros(7)):

logb():

_BSD_SOURCE ||
                      _SVID_SOURCE ||
                      _XOPEN_SOURCE
                      >= 500 || _XOPEN_SOURCE &&
                      _XOPEN_SOURCE_EXTENDED ||
                      _ISOC99_SOURCE
                      || _POSIX_C_SOURCE >=
                      200112L;

or cc
-std=c99

logbf(), logbl():

_BSD_SOURCE ||
                      _SVID_SOURCE ||
                      _XOPEN_SOURCE
                      >= 600 || _ISOC99_SOURCE ||
                      _POSIX_C_SOURCE
                      >= 200112L;

or cc
-std=c99

Note

Link with −lm.

 
DESCRIPTION
These functions extract the exponent from the internal
      floating-point representation of x and return it as a
      floating-point value. The integer constant FLT_RADIX, defined in <float.h>
      indicates the radix used for the system's floating-point
      representation. If FLT_RADIX is
      2, logb(x) is equal to
      floor(log2(x)),
      except that it is probably faster.
If x is subnormal,
      logb() returns the exponent
      x would have if it
      were normalized.

 
RETURN VALUE
On success, these functions return the exponent of
      x.
If x is a NaN, a
      NaN is returned.
If x is zero, then
      a pole error occurs, and the functions return -HUGE_VAL, -HUGE_VALF, or -HUGE_VALL, respectively.
If x is negative
      infinity or positive infinity, then positive infinity is
      returned.

 
ERRORS
See math_error(7) for
      information on how to determine whether an error has occurred
      when calling these functions.
The following errors can occur:

Pole error: x is 0

A divide-by-zero floating-point exception
            (FE_DIVBYZERO) is
            raised.

These functions do not set errno.

 
CONFORMING TO
C99, POSIX.1-2001.

 
SEE ALSO
ilogb(3), log(3)

 
COLOPHON
This page is part of release 3.33 of the Linux man-pages project. A
      description of the project, and information about reporting
      bugs, can be found at http://man7.org/linux/man-pages/.

                    Copyright 2004 Andries Brouwer <aebdocument.write('@');(@)cwi.nl>.

                  and Copyright 2008, Linux Foundation, written by Michael Kerrisk

                      <mtk.manpagesdocument.write('@');(@)gmail.com>

                  Permission is granted to make and distribute verbatim copies of this

                  manual provided the copyright notice and this permission notice are

                  preserved on all copies.

                  Permission is granted to copy and distribute modified versions of this

                  manual under the conditions for verbatim copying, provided that the

                  entire resulting derived work is distributed under the terms of a

                  permission notice identical to this one.

                  Since the Linux kernel and libraries are constantly changing, this

                  manual page may be incorrect or out-of-date.  The author(s) assume no

                  responsibility for errors or omissions, or for damages resulting from

                  the use of the information contained herein.  The author(s) may not

                  have taken the same level of care in the production of this manual,

                  which is licensed free of charge, as they might when working

                  professionally.

                  Formatted or processed versions of this manual, if unaccompanied by

                  the source, must acknowledge the copyright and authors of this work.

                  Inspired by a page by Walter Harms created 2002-08-10

