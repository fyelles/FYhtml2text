

Linux
          manual pages
Section 3
 

 
 

Name
clock_getcpuclockid — obtain ID of a process
      CPU-time clock

Synopsis

#include <time.h>

int
            clock_getcpuclockid(
pid_t pid,

 
clockid_t *clock_id);

           
        

Note

Feature Test Macro Requirements
                      for glibc (see feature_test_macros(7)):

clock_getcpuclockid():

_XOPEN_SOURCE
                      >= 600 || _POSIX_C_SOURCE >=
                      200112L

Note

Link with −lrt.

 
DESCRIPTION
The clock_getcpuclockid()
      function obtains the ID of the CPU-time clock of the process
      whose ID is pid, and
      returns it in the location pointed to by clock_id. If pid is zero, then the clock ID
      of the CPU-time clock of the calling process is returned.

 
RETURN VALUE
On success, clock_getcpuclockid() returns 0; on error,
      it returns one of the positive error numbers listed in
      ERRORS.

 
ERRORS

ENOSYS

The kernel does not support obtaining the
            per-process CPU-time clock of another process, and
            pid does not
            specify the calling process.

EPERM

The caller does not have permission to access the
            CPU-time clock of the process specified by pid. (Specified as an
            optional error in POSIX.1-2001; does not occur on Linux
            unless the kernel does not support obtaining the
            per-process CPU-time clock of another process.)

ESRCH

There is no process with the ID pid.

 
VERSIONS
The clock_getcpuclockid()
      function is available in glibc since version 2.2.

 
CONFORMING TO
POSIX.1-2001.

 
NOTES
Calling clock_gettime(2) with the
      clock ID obtained by a call to clock_getcpuclockid() with a pid of 0, is the same as using
      the clock ID CLOCK_PROCESS_CPUTIME_ID.

 
EXAMPLE
The example program below obtains the CPU-time clock ID of
      the process whose ID is given on the command line, and then
      uses clock_gettime(2) to obtain
      the time on that clock. An example run is the following:

$ ./a.out 1                 # Show CPU clock of init process
CPU-time clock for PID 1 is 2.213466748 seconds

 
Program source

#define _XOPEN_SOURCE 600
#include <stdio.h>
#include <unistd.h>
#include <stdlib.h>
#include <time.h>

int
main(int argc, char *argv[])
{
    clockid_t clockid;
    struct timespec ts;

    if (argc != 2) {
        fprintf(stderr, "%s <process-ID>\n", argv[0]);
        exit(EXIT_FAILURE);
    }

    if (clock_getcpuclockid(atoi(argv[1]), &clockid) != 0) {
        perror("clock_getcpuclockid");
        exit(EXIT_FAILURE);
    }

    if (clock_gettime(clockid, &ts) == −1) {
        perror("clock_gettime");
        exit(EXIT_FAILURE);
    }

    printf("CPU-time clock for PID %s is %ld.%09ld seconds\n",
            argv[1], (long) ts.tv_sec, (long) ts.tv_nsec);
    exit(EXIT_SUCCESS);
}

 
SEE ALSO
clock_getres(2), timer_create(2), pthread_getcpuclockid(3),
      time(7)

 
COLOPHON
This page is part of release 3.33 of the Linux man-pages project. A
      description of the project, and information about reporting
      bugs, can be found at http://man7.org/linux/man-pages/.

                    Copyright (c) 2008, Linux Foundation, written by Michael Kerrisk

                  <mtk.manpagesdocument.write('@');(@)gmail.com>

                  Permission is granted to make and distribute verbatim copies of this

                  manual provided the copyright notice and this permission notice are

                  preserved on all copies.

                  Permission is granted to copy and distribute modified versions of this

                  manual under the conditions for verbatim copying, provided that the

                  entire resulting derived work is distributed under the terms of a

                  permission notice identical to this one.

                  Since the Linux kernel and libraries are constantly changing, this

                  manual page may be incorrect or out-of-date.  The author(s) assume no

                  responsibility for errors or omissions, or for damages resulting from

                  the use of the information contained herein.  The author(s) may not

                  have taken the same level of care in the production of this manual,

                  which is licensed free of charge, as they might when working

                  professionally.

                  Formatted or processed versions of this manual, if unaccompanied by

                  the source, must acknowledge the copyright and authors of this work.

