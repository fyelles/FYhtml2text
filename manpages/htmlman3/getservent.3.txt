

Linux
          manual pages
Section 3
 

 
 

Name
getservent, getservbyname, getservbyport, setservent,
      endservent — get service entry

Synopsis

#include <netdb.h>

struct servent
            *getservent(
void);
 

           
        

struct servent
            *getservbyname(
const char *name,

 
const char *proto);

           
        

struct servent
            *getservbyport(
int port,

 
const char *proto);

           
        

void
            setservent(
int stayopen);

           
        

void
            endservent(
void);
 

           
        

 
DESCRIPTION
The getservent() function
      reads the next entry from the services database (see
      services(5)) and returns a
      servent structure containing
      the broken-out fields from the entry. A connection is opened
      to the database if necessary.
The getservbyname() function
      returns a servent structure
      for the entry from the database that matches the service
      name using protocol
      proto. If proto is NULL, any protocol
      will be matched. A connection is opened to the database if
      necessary.
The getservbyport() function
      returns a servent structure
      for the entry from the database that matches the port
      port (given in
      network byte order) using protocol proto. If proto is NULL, any protocol
      will be matched. A connection is opened to the database if
      necessary.
The setservent() function
      opens a connection to the database, and sets the next entry
      to the first entry. If stayopen is nonzero, then the
      connection to the database will not be closed between calls
      to one of the getserv*()
      functions.
The endservent() function
      closes the connection to the database.
The servent structure is
      defined in <netdb.h> as
      follows:

                  struct
servent {

 
char

                  *
s_name;

                      
                      /* official service name */
                    

 
char

                  **
s_aliases;

                      /* alias list */
                    

 
int

                   
s_port;

                      /* port number */
                    

 
char

                  *
s_proto;

                      
                      /* protocol to use */
                    

};

The members of the servent
      structure are:

s_name

The official name of the service.

s_aliases

A NULL-terminated list of alternative names for the
            service.

s_port

The port number for the service given in network
            byte order.

s_proto

The name of the protocol to use with this
            service.

 
RETURN VALUE
The getservent(),
      getservbyname() and
      getservbyport() functions
      return a pointer to a statically allocated servent structure, or a NULL pointer if
      an error occurs or the end of the file is reached.

 
FILES

/etc/services

services database file

 
CONFORMING TO
4.3BSD, POSIX.1-2001.

 
SEE ALSO
getnetent(3), getprotoent(3), getservent_r(3), services(5)

 
COLOPHON
This page is part of release 3.33 of the Linux man-pages project. A
      description of the project, and information about reporting
      bugs, can be found at http://man7.org/linux/man-pages/.

                    Copyright 1993 David Metcalfe (daviddocument.write('@');(@)prism.demon.co.uk)

                  Permission is granted to make and distribute verbatim copies of this

                  manual provided the copyright notice and this permission notice are

                  preserved on all copies.

                  Permission is granted to copy and distribute modified versions of this

                  manual under the conditions for verbatim copying, provided that the

                  entire resulting derived work is distributed under the terms of a

                  permission notice identical to this one.

                  Since the Linux kernel and libraries are constantly changing, this

                  manual page may be incorrect or out-of-date.  The author(s) assume no

                  responsibility for errors or omissions, or for damages resulting from

                  the use of the information contained herein.  The author(s) may not

                  have taken the same level of care in the production of this manual,

                  which is licensed free of charge, as they might when working

                  professionally.

                  Formatted or processed versions of this manual, if unaccompanied by

                  the source, must acknowledge the copyright and authors of this work.

                  References consulted:
                      Linux libc source code

                      Lewine's _POSIX Programmer's Guide_ (O'Reilly & Associates, 1991)

                      386BSD man pages

                  Modified Sat Jul 24 19:19:11 1993 by Rik Faith (faithdocument.write('@');(@)cs.unc.edu)

                  Modified Wed Oct 18 20:23:54 1995 by Martin Schulze <joeydocument.write('@');(@)infodrom.north.de>

                  Modified Mon Apr 22 01:50:54 1996 by Martin Schulze <joeydocument.write('@');(@)infodrom.north.de>

                  2001-07-25 added a clause about NULL proto (Martin Michlmayr or David N. Welton)

