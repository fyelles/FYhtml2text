

Linux
          manual pages
Section 3
 

 
 

Name
isalnum, isalpha, isascii, isblank, iscntrl, isdigit,
      isgraph, islower, isprint, ispunct, isspace, isupper,
      isxdigit — character classification routines

Synopsis

#include <ctype.h>

int
            isalnum(
int c);

           
        

int
            isalpha(
int c);

           
        

int
            isascii(
int c);

           
        

int
            isblank(
int c);

           
        

int
            iscntrl(
int c);

           
        

int
            isdigit(
int c);

           
        

int
            isgraph(
int c);

           
        

int
            islower(
int c);

           
        

int
            isprint(
int c);

           
        

int
            ispunct(
int c);

           
        

int
            isspace(
int c);

           
        

int
            isupper(
int c);

           
        

int
            isxdigit(
int c);

           
        

Note

Feature Test Macro Requirements
                      for glibc (see feature_test_macros(7)):

isascii():

_BSD_SOURCE ||
                      _SVID_SOURCE ||
                      _XOPEN_SOURCE

isblank():

_XOPEN_SOURCE
                      >= 600 || _ISOC99_SOURCE ||
                      _POSIX_C_SOURCE
                      >= 200112L;

or
                      cc
-std=c99

 
DESCRIPTION
These functions check whether c, which must have the value of
      an unsigned char or EOF, falls into a certain character class
      according to the current locale.

isalnum()

checks for an alphanumeric character; it is
            equivalent to (isalpha(c) || isdigit(c)).

isalpha()

checks for an alphabetic character; in the standard
            “C” locale, it is equivalent
            to (isupper(c) || islower(c)). In some locales,
            there may be additional characters for which
            isalpha() is
            true—letters which are neither upper case nor
            lower case.

isascii()

checks whether c is a 7-bit unsigned char value that fits into the
            ASCII character set.

isblank()

checks for a blank character; that is, a space or a
            tab.

iscntrl()

checks for a control character.

isdigit()

checks for a digit (0 through 9).

isgraph()

checks for any printable character except space.

islower()

checks for a lower-case character.

isprint()

checks for any printable character including
            space.

ispunct()

checks for any printable character which is not a
            space or an alphanumeric character.

isspace()

checks for white-space characters. In the
            “C” and “POSIX” locales, these are:
            space, form-feed ('\f'), newline
            ('\n'),
            carriage return ('\r'), horizontal tab
            ('\t'), and
            vertical tab ('\v').

isupper()

checks for an uppercase letter.

isxdigit()

checks for a hexadecimal digits, that is, one of

0 1 2 3 4 5 6 7 8 9 a b c d e f
      A B C D E F.

 
RETURN VALUE
The values returned are nonzero if the character
      c falls into the
      tested class, and a zero value if not.

 
CONFORMING TO
C99, 4.3BSD. C89 specifies all of these functions except
      isascii() and isblank(). isascii() is a BSD extension and is also an
      SVr4 extension. isblank()
      conforms to POSIX.1-2001 and C99 7.4.1.3. POSIX.1-2008 marks
      isascii() as obsolete, noting
      that it cannot be used portably in a localized
      application.

 
NOTES
The details of what characters belong into which class
      depend on the current locale. For example, isupper() will not recognize an A-umlaut
      (Ä) as an uppercase letter in the default C locale.

 
SEE ALSO
iswalnum(3), iswalpha(3), iswblank(3), iswcntrl(3), iswdigit(3), iswgraph(3), iswlower(3), iswprint(3), iswpunct(3), iswspace(3), iswupper(3), iswxdigit(3), setlocale(3), toascii(3), tolower(3), toupper(3), ascii(7), locale(7)

 
COLOPHON
This page is part of release 3.33 of the Linux man-pages project. A
      description of the project, and information about reporting
      bugs, can be found at http://man7.org/linux/man-pages/.

                    Copyright (c) 1993 by Thomas Koenig (ig25document.write('@');(@)rz.uni-karlsruhe.de)

                  Permission is granted to make and distribute verbatim copies of this

                  manual provided the copyright notice and this permission notice are

                  preserved on all copies.

                  Permission is granted to copy and distribute modified versions of this

                  manual under the conditions for verbatim copying, provided that the

                  entire resulting derived work is distributed under the terms of a

                  permission notice identical to this one.

                  Since the Linux kernel and libraries are constantly changing, this

                  manual page may be incorrect or out-of-date.  The author(s) assume no

                  responsibility for errors or omissions, or for damages resulting from

                  the use of the information contained herein.  The author(s) may not

                  have taken the same level of care in the production of this manual,

                  which is licensed free of charge, as they might when working

                  professionally.

                  Formatted or processed versions of this manual, if unaccompanied by

                  the source, must acknowledge the copyright and authors of this work.

                  License.

                  Modified Sat Jul 24 19:10:00 1993 by Rik Faith (faithdocument.write('@');(@)cs.unc.edu)

                  Modified Sun Aug 21 17:51:50 1994 by Rik Faith (faithdocument.write('@');(@)cs.unc.edu)

                  Modified Sat Sep  2 21:52:01 1995 by Jim Van Zandt <jrvdocument.write('@');(@)vanzandt.mv.com>

                  Modified Mon May 27 22:55:26 1996 by Martin Schulze (joeydocument.write('@');(@)linux.de)

