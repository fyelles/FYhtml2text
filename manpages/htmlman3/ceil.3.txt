

Linux
          manual pages
Section 3
 

 
 

Name
ceil, ceilf, ceill — ceiling function: smallest
      integral value not less than argument

Synopsis

#include <math.h>

double
            ceil(
double x);

           
        

float
            ceilf(
float x);

           
        

long double
            ceill(
long double x);

           
        

Note

Feature Test Macro Requirements
                      for glibc (see feature_test_macros(7)):

ceilf(), ceill():

_BSD_SOURCE ||
                      _SVID_SOURCE ||
                      _XOPEN_SOURCE
                      >= 600 || _ISOC99_SOURCE ||
                      _POSIX_C_SOURCE
                      >= 200112L;

or
                      cc
-std=c99

Note

Link with −lm.

 
DESCRIPTION
These functions return the smallest integral value that is
      not less than x.
For example, ceil(0.5) is 1.0, and
      ceil(−0.5) is
      0.0.

 
RETURN VALUE
These functions return the ceiling of x.
If x is integral,
      +0, −0, NaN, or infinite, x itself is returned.

 
ERRORS
No errors occur. POSIX.1-2001 documents a range error for
      overflows, but see NOTES.

 
CONFORMING TO
C99, POSIX.1-2001. The variant returning double also conforms to SVr4, 4.3BSD, C89.

 
NOTES
SUSv2 and POSIX.1-2001 contain text about overflow (which
      might set errno to ERANGE, or raise an FE_OVERFLOW exception). In practice, the
      result cannot overflow on any current machine, so this
      error-handling stuff is just nonsense. (More precisely,
      overflow can happen only when the maximum value of the
      exponent is smaller than the number of mantissa bits. For the
      IEEE-754 standard 32-bit and 64-bit floating-point numbers
      the maximum value of the exponent is 128 (respectively,
      1024), and the number of mantissa bits is 24 (respectively,
      53).)
The integral value returned by these functions may be too
      large to store in an integer type (int, long, etc.). To
      avoid an overflow, which will produce undefined results, an
      application should perform a range check on the returned
      value before assigning it to an integer type.

 
SEE ALSO
floor(3), lrint(3), nearbyint(3), rint(3), round(3), trunc(3)

 
COLOPHON
This page is part of release 3.33 of the Linux man-pages project. A
      description of the project, and information about reporting
      bugs, can be found at http://man7.org/linux/man-pages/.

                    Copyright 2001 Andries Brouwer <aebdocument.write('@');(@)cwi.nl>.

                  and Copyright 2008, Linux Foundation, written by Michael Kerrisk

                      <mtk.manpagesdocument.write('@');(@)gmail.com>

                  Permission is granted to make and distribute verbatim copies of this

                  manual provided the copyright notice and this permission notice are

                  preserved on all copies.

                  Permission is granted to copy and distribute modified versions of this

                  manual under the conditions for verbatim copying, provided that the

                  entire resulting derived work is distributed under the terms of a

                  permission notice identical to this one.

                  Since the Linux kernel and libraries are constantly changing, this

                  manual page may be incorrect or out-of-date.  The author(s) assume no

                  responsibility for errors or omissions, or for damages resulting from

                  the use of the information contained herein.  The author(s) may not

                  have taken the same level of care in the production of this manual,

                  which is licensed free of charge, as they might when working

                  professionally.

                  Formatted or processed versions of this manual, if unaccompanied by

                  the source, must acknowledge the copyright and authors of this work.

