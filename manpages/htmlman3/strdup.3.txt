

Linux
          manual pages
Section 3
 

 
 

Name
strdup, strndup, strdupa, strndupa — duplicate a
      string

Synopsis

#include <string.h>

char
            *strdup(
const char *s);

           
        

char
            *strndup(
const char *s,

 
size_t n);

           
        

char
            *strdupa(
const char *s);

           
        

char
            *strndupa(
const char *s,

 
size_t n);

           
        

Note

Feature Test Macro Requirements
                      for glibc (see feature_test_macros(7)):

strdup():

_SVID_SOURCE ||
                      _BSD_SOURCE ||
                      _XOPEN_SOURCE
                      >= 500 || _XOPEN_SOURCE &&
                      _XOPEN_SOURCE_EXTENDED

|| /*
                      Since glibc 2.12: */

_POSIX_C_SOURCE
                      >= 200809L

strndup():

Since
                      glibc 2.10:

                      POSIX_C_SOURCE
                      >= 200809L || _XOPEN_SOURCE >=
                      700

Before
                      glibc 2.10:

_GNU_SOURCE

strdupa(), strndupa():

_GNU_SOURCE

 
DESCRIPTION
The strdup() function
      returns a pointer to a new string which is a duplicate of the
      string s. Memory for
      the new string is obtained with malloc(3), and can be freed
      with free(3).
The strndup() function is
      similar, but only copies at most n characters. If s is longer than n, only n characters are copied, and a
      terminating null byte ('\0') is added.
strdupa() and strndupa() are similar, but use alloca(3) to allocate the
      buffer. They are only available when using the GNU GCC suite,
      and suffer from the same limitations described in alloca(3).

 
RETURN VALUE
The strdup() function
      returns a pointer to the duplicated string, or NULL if
      insufficient memory was available.

 
ERRORS

ENOMEM

Insufficient memory available to allocate duplicate
            string.

 
CONFORMING TO
strdup() conforms to SVr4,
      4.3BSD, POSIX.1-2001. strndup()
      conforms to POSIX.1-2008. strdupa() and strndupa() are GNU extensions.

 
SEE ALSO
alloca(3), calloc(3), free(3), malloc(3), realloc(3), string(3), wcsdup(3)

 
COLOPHON
This page is part of release 3.35 of the Linux man-pages project. A
      description of the project, and information about reporting
      bugs, can be found at http://man7.org/linux/man-pages/.

                    Copyright 1993 David Metcalfe (daviddocument.write('@');(@)prism.demon.co.uk)

                  Permission is granted to make and distribute verbatim copies of this

                  manual provided the copyright notice and this permission notice are

                  preserved on all copies.

                  Permission is granted to copy and distribute modified versions of this

                  manual under the conditions for verbatim copying, provided that the

                  entire resulting derived work is distributed under the terms of a

                  permission notice identical to this one.

                  Since the Linux kernel and libraries are constantly changing, this

                  manual page may be incorrect or out-of-date.  The author(s) assume no

                  responsibility for errors or omissions, or for damages resulting from

                  the use of the information contained herein.  The author(s) may not

                  have taken the same level of care in the production of this manual,

                  which is licensed free of charge, as they might when working

                  professionally.

                  Formatted or processed versions of this manual, if unaccompanied by

                  the source, must acknowledge the copyright and authors of this work.

                  References consulted:
                      Linux libc source code

                      Lewine's _POSIX Programmer's Guide_ (O'Reilly & Associates, 1991)

                      386BSD man pages

                  Modified Sun Jul 25 10:41:34 1993 by Rik Faith (faithdocument.write('@');(@)cs.unc.edu)

                  Modified Wed Oct 17 01:12:26 2001 by John Levon <mozdocument.write('@');(@)compsoc.man.ac.uk>

