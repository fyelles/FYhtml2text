

Linux
          manual pages
Section 3
 

 
 

Name
pthread_kill — send a signal to a thread

Synopsis

#include <signal.h>

int
            pthread_kill(
pthread_t thread,

 
int sig);

           
        

Note

Compile and link with −pthread.

 
DESCRIPTION
The pthread_kill() function
      sends the signal sig
      to thread, another
      thread in the same process as the caller. The signal is
      asynchronously directed to thread.
If sig is 0, then
      no signal is sent, but error checking is still performed;
      this can be used to check for the existence of a thread
      ID.

 
RETURN VALUE
On success, pthread_kill()
      returns 0; on error, it returns an error number, and no
      signal is sent.

 
ERRORS

EINVAL

An invalid signal was specified.

ESRCH

No thread with the ID thread could be
            found.

 
CONFORMING TO
POSIX.1-2001.

 
NOTES
Signal dispositions are process-wide: if a signal handler
      is installed, the handler will be invoked in the thread
      thread, but if the
      disposition of the signal is "stop", "continue", or
      "terminate", this action will affect the whole process.

 
SEE ALSO
kill(2) sigaction(2), sigpending(2), pthread_self(3), pthread_sigmask(3),
      raise(3), pthreads(7), signal(7)

 
COLOPHON
This page is part of release 3.33 of the Linux man-pages project. A
      description of the project, and information about reporting
      bugs, can be found at http://man7.org/linux/man-pages/.

                    Copyright (c) 2009 Linux Foundation, written by Michael Kerrisk

                      <mtk.manpagesdocument.write('@');(@)gmail.com>

                  Permission is granted to make and distribute verbatim copies of this

                  manual provided the copyright notice and this permission notice are

                  preserved on all copies.

                  Permission is granted to copy and distribute modified versions of this

                  manual under the conditions for verbatim copying, provided that the

                  entire resulting derived work is distributed under the terms of a

                  permission notice identical to this one.

                  Since the Linux kernel and libraries are constantly changing, this

                  manual page may be incorrect or out-of-date.  The author(s) assume no

                  responsibility for errors or omissions, or for damages resulting from

                  the use of the information contained herein.  The author(s) may not

                  have taken the same level of care in the production of this manual,

                  which is licensed free of charge, as they might when working

                  professionally.

                  Formatted or processed versions of this manual, if unaccompanied by

                  the source, must acknowledge the copyright and authors of this work.

