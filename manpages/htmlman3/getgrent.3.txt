

Linux
          manual pages
Section 3
 

 
 

Name
getgrent, setgrent, endgrent — get group file
      entry

Synopsis

#include <sys/types.h>
#include <grp.h>

struct group
            *getgrent(
void);
 

           
        

void
            setgrent(
void);
 

           
        

void
            endgrent(
void);
 

           
        

Note

Feature Test Macro Requirements
                      for glibc (see feature_test_macros(7)):

setgrent():

_SVID_SOURCE ||
                      _BSD_SOURCE ||
                      _XOPEN_SOURCE
                      >= 500 || _XOPEN_SOURCE &&
                      _XOPEN_SOURCE_EXTENDED
                      ||

/* Since glibc 2.12:

*/
                      _POSIX_C_SOURCE
                      >= 200809L

getgrent(), endgrent():

_SVID_SOURCE ||
                      _BSD_SOURCE ||
                      _XOPEN_SOURCE
                      >= 500 || _XOPEN_SOURCE &&
                      _XOPEN_SOURCE_EXTENDED

 
DESCRIPTION
The getgrent() function
      returns a pointer to a structure containing the broken-out
      fields of a record in the group database (e.g., the local
      group file /etc/group, NIS, and
      LDAP). The first time getgrent() is called, it returns the first
      entry; thereafter, it returns successive entries.
The setgrent() function
      rewinds to the beginning of the group database, to allow
      repeated scans.
The endgrent() function is
      used to close the group database after all processing has
      been performed.
The group structure is
      defined in <grp.h> as
      follows:

                  struct
group {

 
char

                  *
gr_name;

                      /* group name */
                    

 
char

                  *
gr_passwd;

                      /* group password */
                    

 
gid_t

                   
gr_gid;

                      /* group ID */
                    

 
char

                  **
gr_mem;

                      /* group members */
                    

};

For more information about the fields of this structure,
      see group(5).

 
RETURN VALUE
The getgrent() function
      returns a pointer to a group
      structure, or NULL if there are no more entries or an error
      occurs.
Upon error, errno may be set.
      If one wants to check errno
      after the call, it should be set to zero before the call.
The return value may point to a static area, and may be
      overwritten by subsequent calls to getgrent(), getgrgid(3), or getgrnam(3). (Do not pass
      the returned pointer to free(3).)

 
ERRORS

EINTR

A signal was caught.

EIO

I/O error.

EMFILE

The calling process already has too many open
            files.

ENFILE

Too many open files in the system.

ENOMEM

Insufficient memory to allocate group structure.

ERANGE

Insufficient buffer space supplied.

 
FILES

/etc/group

local group database file

 
CONFORMING TO
SVr4, 4.3BSD, POSIX.1-2001.

 
SEE ALSO
fgetgrent(3), getgrent_r(3), getgrgid(3), getgrnam(3), getgrouplist(3), putgrent(3), group(5)

 
COLOPHON
This page is part of release 3.33 of the Linux man-pages project. A
      description of the project, and information about reporting
      bugs, can be found at http://man7.org/linux/man-pages/.

                    Copyright 1993 David Metcalfe (daviddocument.write('@');(@)prism.demon.co.uk)

                  Permission is granted to make and distribute verbatim copies of this

                  manual provided the copyright notice and this permission notice are

                  preserved on all copies.

                  Permission is granted to copy and distribute modified versions of this

                  manual under the conditions for verbatim copying, provided that the

                  entire resulting derived work is distributed under the terms of a

                  permission notice identical to this one.

                  Since the Linux kernel and libraries are constantly changing, this

                  manual page may be incorrect or out-of-date.  The author(s) assume no

                  responsibility for errors or omissions, or for damages resulting from

                  the use of the information contained herein.  The author(s) may not

                  have taken the same level of care in the production of this manual,

                  which is licensed free of charge, as they might when working

                  professionally.

                  Formatted or processed versions of this manual, if unaccompanied by

                  the source, must acknowledge the copyright and authors of this work.

                  References consulted:
                      Linux libc source code

                      Lewine's _POSIX Programmer's Guide_ (O'Reilly & Associates, 1991)

                      386BSD man pages

                  Modified Sat Jul 24 19:29:54 1993 by Rik Faith (faithdocument.write('@');(@)cs.unc.edu)

