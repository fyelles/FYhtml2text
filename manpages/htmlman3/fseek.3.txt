

Linux
          manual pages
Section 3
 

 
 

Name
fgetpos, fseek, fsetpos, ftell, rewind — reposition
      a stream

Synopsis

#include <stdio.h>

int
            fseek(
FILE *stream,

 
long offset,

 
int whence);

           
        

long
            ftell(
FILE *stream);

           
        

void
            rewind(
FILE *stream);

           
        

int
            fgetpos(
FILE *stream,

 
fpos_t *pos);

           
        

int
            fsetpos(
FILE *stream,

 
fpos_t *pos);

           
        

 
DESCRIPTION
The fseek() function sets
      the file position indicator for the stream pointed to by
      stream. The new
      position, measured in bytes, is obtained by adding offset bytes to the position
      specified by whence.
      If whence is set to
      SEEK_SET, SEEK_CUR, or SEEK_END, the offset is relative to the
      start of the file, the current position indicator, or
      end-of-file, respectively. A successful call to the
      fseek() function clears the
      end-of-file indicator for the stream and undoes any effects
      of the ungetc(3) function on the
      same stream.
The ftell() function obtains
      the current value of the file position indicator for the
      stream pointed to by stream.
The rewind() function sets
      the file position indicator for the stream pointed to by
      stream to the
      beginning of the file. It is equivalent to:

(void) fseek(stream, 0L, SEEK_SET)

except that the error indicator for the stream is also
      cleared (see clearerr(3)).
The fgetpos() and
      fsetpos() functions are
      alternate interfaces equivalent to ftell() and fseek() (with whence set to SEEK_SET), setting and storing the current
      value of the file offset into or from the object referenced
      by pos. On some
      non-UNIX systems an fpos_t object
      may be a complex object and these routines may be the only
      way to portably reposition a text stream.

 
RETURN VALUE
The rewind() function
      returns no value. Upon successful completion, fgetpos(), fseek(), fsetpos() return 0, and ftell() returns the current offset.
      Otherwise, −1 is returned and errno is set to indicate the error.

 
ERRORS

EBADF

The stream
            specified is not a seekable stream.

EINVAL

The whence
            argument to fseek() was
            not SEEK_SET,
            SEEK_END, or SEEK_CUR.

The functions fgetpos(),
      fseek(), fsetpos(), and ftell() may also fail and set errno for any of the errors specified for
      the routines fflush(3), fstat(2), lseek(2), and malloc(3).

 
CONFORMING TO
C89, C99.

 
SEE ALSO
lseek(2), fseeko(3)

 
COLOPHON
This page is part of release 3.33 of the Linux man-pages project. A
      description of the project, and information about reporting
      bugs, can be found at http://man7.org/linux/man-pages/.

                    Copyright (c) 1990, 1991 The Regents of the University of California.

                  All rights reserved.

                  This code is derived from software contributed to Berkeley by

                  Chris Torek and the American National Standards Committee X3,

                  on Information Processing Systems.

                  Redistribution and use in source and binary forms, with or without

                  modification, are permitted provided that the following conditions

                  are met:
                  1. Redistributions of source code must retain the above copyright

                     notice, this list of conditions and the following disclaimer.

                  2. Redistributions in binary form must reproduce the above copyright

                     notice, this list of conditions and the following disclaimer in the

                     documentation and/or other materials provided with the distribution.

                  3. All advertising materials mentioning features or use of this software

                     must display the following acknowledgement:

                  This product includes software developed by the University of

                  California, Berkeley and its contributors.

                  4. Neither the name of the University nor the names of its contributors

                     may be used to endorse or promote products derived from this software

                     without specific prior written permission.

                  THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND

                  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE

                  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE

                  ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE

                  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL

                  DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS

                  OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)

                  HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT

                  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY

                  OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF

                  SUCH DAMAGE.

                      document.write('@');(@)(#)fseek.3
                  6.11 (Berkeley) 6/29/91

                  Converted for Linux, Mon Nov 29 15:22:01 1993, faithdocument.write('@');(@)cs.unc.edu

