

Linux
          manual pages
Section 3
 

 
 

Name
strcpy, strncpy — copy a string

Synopsis

#include <string.h>

char
            *strcpy(
char *dest,

 
const char *src);

           
        

char
            *strncpy(
char *dest,

 
const char *src,

 
size_t n);

           
        

 
DESCRIPTION
The strcpy() function copies
      the string pointed to by src, including the terminating
      null byte ('\0'), to the buffer pointed to by dest. The strings may not
      overlap, and the destination string dest must be large enough to
      receive the copy.
The strncpy() function is
      similar, except that at most n bytes of src are copied.

Warning

If there is no null byte among the first
              n bytes of
              src, the
              string placed in dest will not be
              null-terminated.

If the length of src is less than n, strncpy() pads the remainder of dest with null bytes.
A simple implementation of strncpy() might be:

char *
strncpy(char *dest, const char *src, size_t n)
{
    size_t i;

    for (i = 0; i < n && src[i] != '\0'; i++)
        dest[i] = src[i];
    for ( ; i < n; i++)
        dest[i] = '\0';

    return dest;
}

 
RETURN VALUE
The strcpy() and
      strncpy() functions return a
      pointer to the destination string dest.

 
CONFORMING TO
SVr4, 4.3BSD, C89, C99.

 
NOTES
Some programmers consider strncpy() to be inefficient and error
      prone. If the programmer knows (i.e., includes code to test!)
      that the size of dest
      is greater than the length of src, then strcpy() can be used.
If there is no terminating null byte in the first
      n characters of
      src, strncpy() produces an unterminated string
      in dest. Programmers
      often prevent this mistake by forcing termination as
      follows:

strncpy(buf, str, n);
if (n > 0)
    buf[n − 1]= '\0';

 
BUGS
If the destination string of a strcpy() is not large enough, then anything
      might happen. Overflowing fixed-length string buffers is a
      favorite cracker technique for taking complete control of the
      machine. Any time a program reads or copies data into a
      buffer, the program first needs to check that there's enough
      space. This may be unnecessary if you can show that overflow
      is impossible, but be careful: programs can get changed over
      time, in ways that may make the impossible possible.

 
SEE ALSO
bcopy(3), memccpy(3), memcpy(3), memmove(3), stpcpy(3), stpncpy(3), strdup(3), string(3), wcscpy(3), wcsncpy(3)

 
COLOPHON
This page is part of release 3.35 of the Linux man-pages project. A
      description of the project, and information about reporting
      bugs, can be found at http://man7.org/linux/man-pages/.

                    Copyright (C) 1993 David Metcalfe (daviddocument.write('@');(@)prism.demon.co.uk)

                  Permission is granted to make and distribute verbatim copies of this

                  manual provided the copyright notice and this permission notice are

                  preserved on all copies.

                  Permission is granted to copy and distribute modified versions of this

                  manual under the conditions for verbatim copying, provided that the

                  entire resulting derived work is distributed under the terms of a

                  permission notice identical to this one.

                  Since the Linux kernel and libraries are constantly changing, this

                  manual page may be incorrect or out-of-date.  The author(s) assume no

                  responsibility for errors or omissions, or for damages resulting from

                  the use of the information contained herein.  The author(s) may not

                  have taken the same level of care in the production of this manual,

                  which is licensed free of charge, as they might when working

                  professionally.

                  Formatted or processed versions of this manual, if unaccompanied by

                  the source, must acknowledge the copyright and authors of this work.

                  References consulted:
                      Linux libc source code

                      Lewine's _POSIX Programmer's Guide_ (O'Reilly & Associates, 1991)

                      386BSD man pages

                  Modified Sat Jul 24 18:06:49 1993 by Rik Faith (faithdocument.write('@');(@)cs.unc.edu)

                  Modified Fri Aug 25 23:17:51 1995 by Andries Brouwer (aebdocument.write('@');(@)cwi.nl)

                  Modified Wed Dec 18 00:47:18 1996 by Andries Brouwer (aebdocument.write('@');(@)cwi.nl)

                  2007-06-15, Marc Boyer <marc.boyerdocument.write('@');(@)enseeiht.fr> + mtk

                      Improve discussion of strncpy().

