

Linux
          manual pages
Section 3
 

 
 

Name
etext, edata, end — end of program segments

Synopsis

extern etext;
extern edata;
extern end;
  

 
DESCRIPTION
The addresses of these symbols indicate the end of various
      program segments:

etext

This is the first address past the end of the text
            segment (the program code).

edata

This is the first address past the end of the
            initialized data segment.

end

This is the first address past the end of the
            uninitialized data segment (also known as the BSS
            segment).

 
CONFORMING TO
Although these symbols have long been provided on most
      UNIX systems, they are not standardized; use with
      caution.

 
NOTES
The program must explicitly declare these symbols; they
      are not defined in any header file.
On some systems the names of these symbols are preceded by
      underscores, thus: _etext,
      _edata, and _end. These symbols are also defined for
      programs compiled on Linux.
At the start of program execution, the program break will
      be somewhere near &end (perhaps at the
      start of the following page). However, the break will change
      as memory is allocated via brk(2) or malloc(3). Use sbrk(2) with an argument of
      zero to find the current value of the program break.

 
EXAMPLE
When run, the program below produces output such as the
      following:

$ ./a.out
First address past:
    program text (etext)       0x8048568
    initialized data (edata)   0x804a01c
    uninitialized data (end)   0x804a024

 
Program source

#include <stdio.h>
#include <stdlib.h>

extern char etext, edata, end; /* The symbols must have some type,
                                   or "gcc −Wall" complains */

int
main(int argc, char *argv[])
{
    printf("First address past:\n");
    printf("    program text (etext)      %10p\n", &etext);
    printf("    initialized data (edata)  %10p\n", &edata);
    printf("    uninitialized data (end)  %10p\n", &end);

    exit(EXIT_SUCCESS);
}

 
SEE ALSO
objdump(1), readelf(1), sbrk(2), elf(5)

 
COLOPHON
This page is part of release 3.33 of the Linux man-pages project. A
      description of the project, and information about reporting
      bugs, can be found at http://man7.org/linux/man-pages/.

                    Copyright (c) 2008, Linux Foundation, written by by Michael Kerrisk

                      <mtk.manpagesdocument.write('@');(@)gmail.com>

                  Permission is granted to make and distribute verbatim copies of this

                  manual provided the copyright notice and this permission notice are

                  preserved on all copies.

                  Permission is granted to copy and distribute modified versions of this

                  manual under the conditions for verbatim copying, provided that the

                  entire resulting derived work is distributed under the terms of a

                  permission notice identical to this one

                  Since the Linux kernel and libraries are constantly changing, this

                  manual page may be incorrect or out-of-date.  The author(s) assume no

                  responsibility for errors or omissions, or for damages resulting from

                  the use of the information contained herein.  The author(s) may not

                  have taken the same level of care in the production of this manual,

                  which is licensed free of charge, as they might when working

                  professionally.

                  Formatted or processed versions of this manual, if unaccompanied by

                  the source, must acknowledge the copyright and authors of this work.

                  License.

