

Linux
          manual pages
Section 3
 

 
 

Name
drem, dremf, dreml, remainder, remainderf, remainderl
      — floating-point remainder function

Synopsis

#include <math.h>

/* The C99 versions */

double
            remainder(
double x,

 
double y);

           
        

float
            remainderf(
float x,

 
float y);

           
        

long double
            remainderl(
long double x,

 
long double y);

           
        

/* Obsolete synonyms */

double
            drem(
double x,

 
double y);

           
        

float
            dremf(
float x,

 
float y);

           
        

long double
            dreml(
long double x,

 
long double y);

           
        

Note

Feature Test Macro Requirements
                      for glibc (see feature_test_macros(7)):

remainder():

_SVID_SOURCE ||
                      _BSD_SOURCE ||
                      _XOPEN_SOURCE
                      >= 500 || _XOPEN_SOURCE &&
                      _XOPEN_SOURCE_EXTENDED ||
                      _ISOC99_SOURCE
                      || _POSIX_C_SOURCE >=
                      200112L;

or
                      cc
-std=c99

remainderf(), remainderl():

_BSD_SOURCE ||
                      _SVID_SOURCE ||
                      _XOPEN_SOURCE
                      >= 600 || _ISOC99_SOURCE ||
                      _POSIX_C_SOURCE
                      >= 200112L;

or
                      cc
-std=c99

drem(), dremf(), dreml():

_SVID_SOURCE ||
                      _BSD_SOURCE

Note

Link with −lm.

 
DESCRIPTION
The remainder() function
      computes the remainder of dividing x by y. The return value is
      x−n*y,
      where n is the value
      x / y, rounded to the
      nearest integer. If the absolute value of x−n*y
      is 0.5, n is chosen to be
      even.
These functions are unaffected by the current rounding
      mode (see fenv(3)).
The drem() function does
      precisely the same thing.

 
RETURN VALUE
On success, these functions return the floating-point
      remainder, x−n*y.
      If the return value is 0, it has the sign of x.
If x or y is a NaN, a NaN is
      returned.
If x is an
      infinity, and y is
      not a NaN, a domain error occurs, and a NaN is returned.
If y is zero, and
      x is not a NaN, a
      domain error occurs, and a NaN is returned.

 
ERRORS
See math_error(7) for
      information on how to determine whether an error has occurred
      when calling these functions.
The following errors can occur:

Domain error: x is an infinity and
          y is not a
          NaN

An invalid floating-point exception (FE_INVALID) is raised.
These functions do not set errno for this case.

Domain error: y is zero

errno is set to
            EDOM. An invalid
            floating-point exception (FE_INVALID) is raised.

 
CONFORMING TO
The functions remainder(),
      remainderf(), and remainderl() are specified in C99 and
      POSIX.1-2001.
The function drem() is from
      4.3BSD. The float and long double variants dremf() and dreml() exist on some systems, such as
      Tru64 and glibc2. Avoid the use of these functions in favor
      of remainder() etc.

 
BUGS
The call
remainder(nan(""), 0);
returns a NaN, as expected, but wrongly causes a domain
      error; it should yield a silent NaN.

 
EXAMPLE
The call "remainder(29.0, 3.0)" returns −1.

 
SEE ALSO
div(3), fmod(3), remquo(3)

 
COLOPHON
This page is part of release 3.33 of the Linux man-pages project. A
      description of the project, and information about reporting
      bugs, can be found at http://man7.org/linux/man-pages/.

                    Copyright 1993 David Metcalfe (daviddocument.write('@');(@)prism.demon.co.uk)

                  and Copyright 2008, Linux Foundation, written by Michael Kerrisk

                      <mtk.manpagesdocument.write('@');(@)gmail.com>

                  Permission is granted to make and distribute verbatim copies of this

                  manual provided the copyright notice and this permission notice are

                  preserved on all copies.

                  Permission is granted to copy and distribute modified versions of this

                  manual under the conditions for verbatim copying, provided that the

                  entire resulting derived work is distributed under the terms of a

                  permission notice identical to this one.

                  Since the Linux kernel and libraries are constantly changing, this

                  manual page may be incorrect or out-of-date.  The author(s) assume no

                  responsibility for errors or omissions, or for damages resulting from

                  the use of the information contained herein.  The author(s) may not

                  have taken the same level of care in the production of this manual,

                  which is licensed free of charge, as they might when working

                  professionally.

                  Formatted or processed versions of this manual, if unaccompanied by

                  the source, must acknowledge the copyright and authors of this work.

                  References consulted:
                      Linux libc source code

                      Lewine's _POSIX Programmer's Guide_ (O'Reilly & Associates, 1991)

                      386BSD man pages

                  Modified 1993-07-24 by Rik Faith (faithdocument.write('@');(@)cs.unc.edu)

                  Modified 2002-08-10 Walter Harms

                  (walter.harmsdocument.write('@');(@)informatik.uni-oldenburg.de)
                  Modified 2003-11-18, 2004-10-05 aeb

