

Linux
          manual pages
Section 3
 

 
 

Name
ftok — convert a pathname and a project identifier
      to a System V IPC key

Synopsis

#include <sys/types.h>
#include <sys/ipc.h>

key_t
            ftok(
const char *pathname,

 
int proj_id);

           
        

 
DESCRIPTION
The ftok() function uses the
      identity of the file named by the given pathname (which must refer to
      an existing, accessible file) and the least significant 8
      bits of proj_id
      (which must be nonzero) to generate a key_t type System V IPC key, suitable for use
      with msgget(2), semget(2), or shmget(2).
The resulting value is the same for all pathnames that
      name the same file, when the same value of proj_id is used. The value
      returned should be different when the (simultaneously
      existing) files or the project IDs differ.

 
RETURN VALUE
On success, the generated key_t
      value is returned. On failure −1 is returned, with
      errno indicating the error as
      for the stat(2) system call.

 
CONFORMING TO
POSIX.1-2001.

 
NOTES
Under libc4 and libc5 (and under SunOS 4.x) the prototype
      was:

  key_t ftok(char *pathname, char proj_id);

Today proj_id is
      an int, but still only 8 bits are
      used. Typical usage has an ASCII character proj_id, that is why the
      behavior is said to be undefined when proj_id is zero.
Of course no guarantee can be given that the resulting
      key_t is unique. Typically, a best
      effort attempt combines the given proj_id byte, the lower 16 bits
      of the inode number, and the lower 8 bits of the device
      number into a 32-bit result. Collisions may easily happen,
      for example between files on /dev/hda1 and files on /dev/sda1.

 
SEE ALSO
msgget(2), semget(2), shmget(2), stat(2), svipc(7)

 
COLOPHON
This page is part of release 3.33 of the Linux man-pages project. A
      description of the project, and information about reporting
      bugs, can be found at http://man7.org/linux/man-pages/.

                    Copyright 1993 Giorgio Ciucci (giorgiodocument.write('@');(@)crcc.it)

                  Permission is granted to make and distribute verbatim copies of this

                  manual provided the copyright notice and this permission notice are

                  preserved on all copies.

                  Permission is granted to copy and distribute modified versions of this

                  manual under the conditions for verbatim copying, provided that the

                  entire resulting derived work is distributed under the terms of a

                  permission notice identical to this one.

                  Since the Linux kernel and libraries are constantly changing, this

                  manual page may be incorrect or out-of-date.  The author(s) assume no

                  responsibility for errors or omissions, or for damages resulting from

                  the use of the information contained herein.  The author(s) may not

                  have taken the same level of care in the production of this manual,

                  which is licensed free of charge, as they might when working

                  professionally.

                  Formatted or processed versions of this manual, if unaccompanied by

                  the source, must acknowledge the copyright and authors of this work.

                  Modified 2001-11-28, by Michael Kerrisk, <mtk.manpagesdocument.write('@');(@)gmail.com>

                  Changed data type of proj_id; minor fixes

                  aeb: further fixes; added notes.

