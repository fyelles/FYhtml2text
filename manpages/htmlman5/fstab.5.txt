

Linux
          manual pages
Section 5
 

 
 

Name
fstab — static information about the filesystems

Synopsis

/etc/fstab
  

 
DESCRIPTION
The file fstab
      contains descriptive information about the various file
      systems. fstab is
      only read by programs, and not written; it is the duty of the
      system administrator to properly create and maintain this
      file. Each filesystem is described on a separate line; fields
      on each line are separated by tabs or spaces. Lines starting
      with '#' are comments. The order of records in fstab is important because
      fsck(8), mount(8), and umount(8) sequentially
      iterate through fstab doing their thing.
The first field
      (fs_spec).

This field describes the block special device or
          remote filesystem to be mounted.
For ordinary mounts it will hold (a link to) a block
          special device node (as created by mknod(8)) for the device to
          be mounted, like `/dev/cdrom' or `/dev/sdb7'. For NFS
          mounts one will have <host>:<dir>, e.g.,
          `knuth.aeb.nl:/'. For procfs, use `proc'.
Instead of giving the device explicitly, one may
          indicate the (ext2 or xfs) filesystem that is to be
          mounted by its UUID or volume label (cf. e2label(8) or xfs_admin(8)), writing
          LABEL=<label> or UUID=<uuid>, e.g.,
          `LABEL=Boot' or
          `UUID=3e6be9de-8139-11d1-9106-a43f08d823a6'. This will
          make the system more robust: adding or removing a SCSI
          disk changes the disk device name but not the filesystem
          volume label.
Note that mount(8) uses UUIDs as
          strings. The string representation of the UUID should be
          based on lower case characters.

The second field
      (fs_file).

This field describes the mount point for the
          filesystem. For swap partitions, this field should be
          specified as `none'. If the name of the mount point
          contains spaces these can be escaped as `\040'.

The third field
      (fs_vfstype).

This field describes the type of the filesystem. Linux
          supports lots of filesystem types, such as adfs, affs, autofs, coda, coherent, cramfs, devpts, efs, ext2, ext3, hfs, hpfs, iso9660, jfs, minix, msdos, ncpfs, nfs, ntfs, proc, qnx4, reiserfs, romfs, smbfs, sysv, tmpfs, udf, ufs, umsdos, vfat, xenix, xfs, and possibly others.
          For more details, see mount(8).
For the filesystems currently supported by the running
          kernel, see /proc/filesystems.
An entry swap denotes a file or
          partition to be used for swapping, cf. swapon(8). An entry
          ignore causes
          the line to be ignored. This is useful to show disk
          partitions which are currently unused. An entry
          none is useful
          for bind or move mounts.
mount(8) and umount(8) support
          filesystem subtypes. The subtype is
          defined by '.subtype' suffix. For example 'fuse.sshfs'.
          It's recommended to use subtype notation rather than add
          any prefix to the first fstab field (for example
          'sshfs#example.com' is depreacated).

The fourth field
      (fs_mntops).

This field describes the mount options associated with
          the filesystem.
It is formatted as a comma separated list of options.
          It contains at least the type of mount plus any
          additional options appropriate to the filesystem type.
          For documentation on the available mount options, see
          mount(8). For
          documentation on the available swap options, see
          swapon(8).
Basic file system independent options are:

defaults

use default options: rw, suid, dev, exec, auto,
                nouser, and async.

noauto

do not mount when "mount -a" is given (e.g., at
                boot time)

user

allow a user to mount

wner

allow device owner to mount

comment

for use by fstab-maintaining programs

nofail

do not report errors for this device if it does
                not exist.

The fifth field
      (fs_freq).

This field is used for these filesystems by the
          dump(8) command to
          determine which filesystems need to be dumped. If the
          fifth field is not present, a value of zero is returned
          and dump will
          assume that the filesystem does not need to be
          dumped.

The sixth field
      (fs_passno).

This field is used by the fsck(8) program to
          determine the order in which filesystem checks are done
          at reboot time. The root filesystem should be specified
          with a fs_passno of 1, and other
          filesystems should have a fs_passno of 2.
          Filesystems within a drive will be checked sequentially,
          but filesystems on different drives will be checked at
          the same time to utilize parallelism available in the
          hardware. If the sixth field is not present or zero, a
          value of zero is returned and fsck will assume that the
          filesystem does not need to be checked.

The proper way to read records from fstab is to use the routines
      getmntent(3).

 
FILES
/etc/fstab, <fstab.h>

 
SEE ALSO
mount(8), swapon(8), fs(5), nfs(5), xfs(5), proc(5), getmntent(3)

 
HISTORY
The ancestor of this fstab file format appeared in
      4.0BSD.

 
AVAILABILITY
This man page is part of the util-linux package and is
      available from
      ftp://ftp.kernel.org/pub/linux/utils/util-linux/.

                    Copyright (c) 1980, 1989, 1991 The Regents of the University of California.

                  All rights reserved.

                  Redistribution and use in source and binary forms, with or without

                  modification, are permitted provided that the following conditions

                  are met:
                  1. Redistributions of source code must retain the above copyright

                     notice, this list of conditions and the following disclaimer.

                  2. Redistributions in binary form must reproduce the above copyright

                     notice, this list of conditions and the following disclaimer in the

                     documentation and/or other materials provided with the distribution.

                  3. All advertising materials mentioning features or use of this software

                     must display the following acknowledgement:

                  This product includes software developed by the University of

                  California, Berkeley and its contributors.

                  4. Neither the name of the University nor the names of its contributors

                     may be used to endorse or promote products derived from this software

                     without specific prior written permission.

                  THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND

                  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE

                  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE

                  ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE

                  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL

                  DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS

                  OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)

                  HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT

                  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY

                  OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF

                  SUCH DAMAGE.

                      document.write('@');(@)(#)fstab.5
                  6.5 (Berkeley) 5/10/91

                  Modified Sat Mar  6 20:45:03 1993, faithdocument.write('@');(@)cs.unc.edu, for Linux

                  Sat Oct  9 10:07:10 1993: converted to man format by faithdocument.write('@');(@)cs.unc.edu

                  Sat Nov 20 20:47:38 1993: hpfs documentation added

                  Sat Nov 27 20:23:32 1993: Updated authorship information

                  Wed Jul 26 00:00:00 1995: Updated some nfs stuff, joeydocument.write('@');(@)infodrom.north.de

                  Tue Apr  2 00:38:28 1996: added info about "noauto", "user", etc.

                  Tue Jun 15 20:02:18 1999: added LABEL and UUID

                  Sat Jul 14 2001: Michael K. Johnson <johnsonmdocument.write('@');(@)redhat.com> added -O

