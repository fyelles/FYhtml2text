

Linux
          manual pages
Section 7
 

 
 

Name
locale — Description of multilanguage support

Synopsis

#include <locale.h>
  

 
DESCRIPTION
A locale is a set of language and cultural rules. These
      cover aspects such as language for messages, different
      character sets, lexicographic conventions, etc. A program
      needs to be able to determine its locale and act accordingly
      to be portable to different cultures.
The header <locale.h>
      declares data types, functions and macros which are useful in
      this task.
The functions it declares are setlocale(3) to set the
      current locale, and localeconv(3) to get
      information about number formatting.
There are different categories for local information a
      program might need; they are declared as macros. Using them
      as the first argument to the setlocale(3) function, it
      is possible to set one of these to the desired locale:

LC_COLLATE

This is used to change the behavior of the functions
            strcoll(3) and
            strxfrm(3), which are
            used to compare strings in the local alphabet. For
            example, the German sharp s is sorted as "ss".

LC_CTYPE

This changes the behavior of the character handling
            and classification functions, such as isupper(3) and
            toupper(3), and the
            multibyte character functions such as mblen(3) or wctomb(3).

LC_MONETARY

changes the information returned by localeconv(3) which
            describes the way numbers are usually printed, with
            details such as decimal point versus decimal comma.
            This information is internally used by the function
            strfmon(3).

LC_MESSAGES

changes the language messages are displayed in and
            what an affirmative or negative answer looks like. The
            GNU C-library contains the gettext(3), ngettext(3), and
            rpmatch(3) functions
            to ease the use of these information. The GNU gettext
            family of functions also obey the environment variable
            LANGUAGE (containing a
            colon-separated list of locales) if the category is set
            to a valid locale other than "C".

LC_NUMERIC

changes the information used by the printf(3) and
            scanf(3) family of
            functions, when they are advised to use the
            locale-settings. This information can also be read with
            the localeconv(3)
            function.

LC_TIME

changes the behavior of the strftime(3) function
            to display the current time in a locally acceptable
            form; for example, most of Europe uses a 24-hour clock
            versus the 12-hour clock used in the United States.

LC_ALL

All of the above.

If the second argument to setlocale(3) is empty
      string, "", for the
      default locale, it is determined using the following
      steps:

If there is a non-null environment variable
            LC_ALL, the value of
            LC_ALL is used.

If an environment variable with the same name as one
            of the categories above exists and is non-null, its
            value is used for that category.

If there is a non-null environment variable
            LANG, the value of
            LANG is used.

Values about local numeric formatting is made available in
      a struct lconv
      returned by the localeconv(3) function,
      which has the following declaration:

                  struct
lconv {

                      
                      /* Numeric (nonmonetary) information */
                    

 
char

                  *
decimal_point;

                      /* Radix character */
                    

 
char

                  *
thousands_sep;

                      
                      /* Separator for digit groups to left

                      of radix character */
                    

 
char

                  *
grouping;

                      
                      /* Each element is the number of digits in a

                      group; elements with higher indices are

                      further left.  An element with value CHAR_MAX

                      means that no further grouping is done.  An

                      element with value 0 means that the previous

                      element is used for all groups further left. */
                    

                      
                      /* Remaining fields are for monetary information */
                    

 
char

                  *
int_curr_symbol;

                      
                      /* First three chars are a currency symbol

                      from ISO 4217.  Fourth char is the

                      separator.  Fifth char is \(aq\\0\(aq. */
                    

 
char

                  *
currency_symbol;

                      
                      /* Local currency symbol */
                    

 
char

                  *
mon_decimal_point;

                      /* Radix character */
                    

 
char

                  *
mon_thousands_sep;

                      
                      /* Like thousands_sep above */
                    

 
char

                  *
mon_grouping;

                      
                      /* Like grouping above */
                    

 
char

                  *
positive_sign;

                      
                      /* Sign for positive values */
                    

 
char

                  *
negative_sign;

                      
                      /* Sign for negative values */
                    

 
char

                   
int_frac_digits;

                      
                      /* International fractional digits */
                    

 
char

                   
frac_digits;

                      
                      /* Local fractional digits */
                    

 
char

                   
p_cs_precedes;

                      
                      /* 1 if currency_symbol precedes a

                      positive value, 0 if succeeds */
                    

 
char

                   
p_sep_by_space;

                      
                      /* 1 if a space separates currency_symbol

                      from a positive value */
                    

 
char

                   
n_cs_precedes;

                      
                      /* 1 if currency_symbol precedes a

                      negative value, 0 if succeeds */
                    

 
char

                   
n_sep_by_space;

                      
                      /* 1 if a space separates currency_symbol

                      from a negative value */
                    

                      
                      /* Positive and negative sign positions:

                      0 Parentheses surround the quantity and currency_symbol.

                      1 The sign string precedes the quantity and currency_symbol.

                      2 The sign string succeeds the quantity and currency_symbol.

                      3 The sign string immediately precedes the currency_symbol.

                      4 The sign string immediately succeeds the currency_symbol. */
                    

 
char

                   
p_sign_posn;
 

 
char

                   
n_sign_posn;
 

};

 
CONFORMING TO
POSIX.1-2001.
The GNU gettext functions are specified in
      LI18NUX2000.

 
SEE ALSO
locale(1), localedef(1), gettext(3), localeconv(3), ngettext(3), nl_langinfo(3), rpmatch(3), setlocale(3), strcoll(3), strfmon(3), strftime(3), strxfrm(3)

 
COLOPHON
This page is part of release 3.33 of the Linux man-pages project. A
      description of the project, and information about reporting
      bugs, can be found at http://man7.org/linux/man-pages/.

                    Copyright (c) 1993 by Thomas Koenig (ig25document.write('@');(@)rz.uni-karlsruhe.de)

                  Permission is granted to make and distribute verbatim copies of this

                  manual provided the copyright notice and this permission notice are

                  preserved on all copies.

                  Permission is granted to copy and distribute modified versions of this

                  manual under the conditions for verbatim copying, provided that the

                  entire resulting derived work is distributed under the terms of a

                  permission notice identical to this one.

                  Since the Linux kernel and libraries are constantly changing, this

                  manual page may be incorrect or out-of-date.  The author(s) assume no

                  responsibility for errors or omissions, or for damages resulting from

                  the use of the information contained herein.  The author(s) may not

                  have taken the same level of care in the production of this manual,

                  which is licensed free of charge, as they might when working

                  professionally.

                  Formatted or processed versions of this manual, if unaccompanied by

                  the source, must acknowledge the copyright and authors of this work.

                  Modified Sat Jul 24 17:28:34 1993 by Rik Faith <faithdocument.write('@');(@)cs.unc.edu>

                  Modified Sun Jun 01 17:16:34 1997 by Jochen Hein

                    <jochen.heindocument.write('@');(@)delphi.central.de>

                  Modified Thu Apr 25 00:43:19 2002 by Bruno Haible <brunodocument.write('@');(@)clisp.org>

